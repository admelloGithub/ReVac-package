<?xml version="1.0" encoding="UTF-8"?>

<commandSetRoot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation='commandSet.xsd'>
    <commandSet type="serial">
	<state>incomplete</state>
	<name>bulk_delete workflow</name>
	<!--Preprocessing-->
	<command>
	    <type>RunUnixCommand</type>
	    <name>create output directory</name>
	    <state>incomplete</state>
	    <executable>mkdir</executable>
	    <arg>-p -m 777 $;OUTPUT_DIRECTORY$;</arg>
	</command>
	<command>
	    <type>RunUnixCommand</type>
	    <name>create temp directory</name>
	    <state>incomplete</state>
	    <executable>mkdir</executable>
	    <arg>-p -m 777 $;TMP_DIR$;</arg>
	</command>
	<!--Processing-->
 	<command>
	    <type>RunUnixCommand</type>
	    <name>check whether the workflow should  be executed</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/checkAndDelete</executable>
            <param>
		<key>--analysis_id</key>
		<value>$;ANALYSIS_ID$;</value>
	    </param>
            <param>
		<key>--algorithm</key>
		<value>$;ALGORITHM$;</value>
	    </param>
            <param>
		<key>--database</key>
		<value>$;DATABASE$;</value>
	    </param>
            <param>
		<key>--database_type</key>
		<value>$;DATABASE_TYPE$;</value>
	    </param>
            <param>
		<key>--feature_id</key>
		<value>$;FEATURE_ID$;</value>
	    </param>
            <param>
		<key>--is_obsolete</key>
		<value>$;IS_OBSOLETE$;</value>
	    </param>
            <param>
		<key>--organism_id</key>
		<value>$;ORGANISM_ID$;</value>
	    </param>
            <param>
		<key>--username</key>
		<value>chado_admin</value>
	    </param>
            <param>
		<key>--password</key>
		<value>chado_admin99</value>
	    </param>
            <param>
		<key>--server</key>
		<value>$;SERVER$;</value>
	    </param>
            <param>
		<key>--logfile</key>
		<value>$;OUTPUT_DIRECTORY$;/checkAndDelete.pl.log</value>
	    </param>
            <param>
		<key>stdout</key>
		<value>$;OUTPUT_DIRECTORY$;/checkAndDelete.pl.stdout</value>
	    </param>
            <param>
		<key>stderr</key>
		<value>$;OUTPUT_DIRECTORY$;/checkAndDelete.pl.stderr</value>
	    </param>
	</command>
 	<command>
	    <type>RunUnixCommand</type>
	    <name>Revoke permissions</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/ddl2iterator</executable>
            <param>
		<key>stdin</key>
		<value>$;DOCS_DIR$;/ddls/$;DATABASE_TYPE$;/revoke_all_public.$;DATABASE_TYPE$;.ddl</value>
	    </param>
	    <param>
		<key>stdout</key>    
		<value>$;TMP_DIR$;/revoke_permissions.list</value>
	    </param>
	    <param>
		<key>stderr</key>    
		<value>$;TMP_DIR$;/revoke_permissions.stderr</value>
	    </param>
	</command>
	<!--This iterator will revoke permissions on the database.-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR1,$;ITERATOR_XML$;=ITERATOR1_XML,$;ITERATOR_LIST$;=$;TMP_DIR$;/revoke_permissions.list,$;NODISTRIB$;=1,$;GROUP_NUMBER$;=1"/>
	<command>
	    <type>RunUnixCommand</type>
	    <name>create counts directory</name>
	    <state>incomplete</state>
	    <executable>mkdir</executable>
	    <arg>-p -m 777 $;OUTPUT_DIRECTORY$;/counts</arg>
	</command>
	<!--The following step will create the delete_records.sql.list file for ITERATOR3 to process.-->
	<command>
	    <type>RunUnixCommand</type>
	    <name>create table count SQL files</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/createSelectRecordCountsSQL</executable>
	    <param>
		<key>--database</key>
		<value>$;DATABASE$;</value>
	    </param>
	    <param>
		<key>--database_type</key>
		<value>$;DATABASE_TYPE$;</value>
	    </param>
	    <param>
		<key>--analysis_id</key>
		<value>$;ANALYSIS_ID$;</value>
	    </param>
	    <param>
		<key>--algorithm</key>
		<value>$;ALGORITHM$;</value>
	    </param>
	    <param>
		<key>--feature_id</key>
		<value>$;FEATURE_ID$;</value>
	    </param>
            <param>
		<key>--is_obsolete</key>
		<value>$;IS_OBSOLETE$;</value>
	    </param>
	    <param>
		<key>--organism_id</key>
		<value>$;ORGANISM_ID$;</value>
	    </param>
	    <param>
		<key>--for_workflow</key>
		<value>1</value>
	    </param>
	    <param>
		<key>--outdir</key>
		<value>$;OUTPUT_DIRECTORY$;/counts</value>
	    </param>
	    <param>
		<key>--username</key>
		<value>chado_admin</value>
	    </param>
	    <param>
		<key>--password</key>
		<value>chado_admin99</value>
	    </param>
	    <param>
		<key>--server</key>
		<value>$;SERVER$;</value>
	    </param>
	    <param>
		<key>--logfile</key>
		<value>$;OUTPUT_DIRECTORY$;/counts/createSelectRecordCountsSQL.pl.log</value>
	    </param>
	    <param>
		<key>stdout</key>
		<value>$;OUTPUT_DIRECTORY$;/counts/createSelectRecordCountsSQL.pl.stdout</value>
	    </param>
	    <param>
		<key>stderr</key>
		<value>$;OUTPUT_DIRECTORY$;/counts/createSelectRecordCountsSQL.pl.stderr</value>
	    </param>
	</command>
	<!--This iterator will get all table counts-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR2,$;ITERATOR_XML$;=ITERATOR2_XML,$;ITERATOR_LIST$;=$;OUTPUT_DIRECTORY$;/counts/all/select.sql.list,$;NODISTRIB$;=1,$;GROUP_NUMBER$;=1"/>
	<!--This iterator will get all table counts for records not linked to the input value-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR3,$;ITERATOR_XML$;=ITERATOR3_XML,$;ITERATOR_LIST$;=$;OUTPUT_DIRECTORY$;/counts/not/select.sql.list,$;NODISTRIB$;=1,$;GROUP_NUMBER$;=1"/>
	<!--This iterator will get all table counts for records linked to the input value-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR4,$;ITERATOR_XML$;=ITERATOR4_XML,$;ITERATOR_LIST$;=$;OUTPUT_DIRECTORY$;/counts/with/select.sql.list,$;NODISTRIB$;=1,$;GROUP_NUMBER$;=1"/>
	<command>
	    <type>RunUnixCommand</type>
	    <name>create directory for SQL files for views</name>
	    <state>incomplete</state>
	    <executable>mkdir</executable>
	    <arg>-p -m 777 $;OUTPUT_DIRECTORY$;/views</arg>
	</command>
	<command>
	    <type>RunUnixCommand</type>
	    <name>Create the views</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/createViewsSQL</executable>
	    <param>
		<key>--database</key>
		<value>$;DATABASE$;</value>
	    </param>
	    <param>
		<key>--database_type</key>
		<value>$;DATABASE_TYPE$;</value>
	    </param>
	    <param>
		<key>--analysis_id</key>
		<value>$;ANALYSIS_ID$;</value>
	    </param>
	    <param>
		<key>--algorithm</key>
		<value>$;ALGORITHM$;</value>
	    </param>
	    <param>
		<key>--feature_id</key>
		<value>$;FEATURE_ID$;</value>
	    </param>
            <param>
		<key>--is_obsolete</key>
		<value>$;IS_OBSOLETE$;</value>
	    </param>
	    <param>
		<key>--organism_id</key>
		<value>$;ORGANISM_ID$;</value>
	    </param>
	    <param>
		<key>--for_workflow</key>
		<value>1</value>
	    </param>
	    <param>
		<key>--outdir</key>
		<value>$;OUTPUT_DIRECTORY$;/views</value>
	    </param>
	    <param>
		<key>--username</key>
		<value>chado_admin</value>
	    </param>
	    <param>
		<key>--password</key>
		<value>chado_admin99</value>
	    </param>
	    <param>
		<key>--server</key>
		<value>$;SERVER$;</value>
	    </param>
	    <param>
		<key>--logfile</key>
		<value>$;OUTPUT_DIRECTORY$;/counts/createViewsSQL.pl.log</value>
	    </param>
	    <param>
		<key>stdout</key>
		<value>$;OUTPUT_DIRECTORY$;/counts/createViewsSQL.pl.stdout</value>
	    </param>
	    <param>
		<key>stderr</key>
		<value>$;OUTPUT_DIRECTORY$;/counts/createViewsSQL.pl.stderr</value>
	    </param>
	</command>
	<!--This iterator will execute instructions to drop the views.-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR5,$;ITERATOR_XML$;=ITERATOR5_XML,$;ITERATOR_LIST$;=$;OUTPUT_DIRECTORY$;/views/drop_views/drop_views.sql.list,$;NODISTRIB$;=1,$;GROUP_NUMBER$;=1"/>
	<!--This iterator will execute instructions to create the views.-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR6,$;ITERATOR_XML$;=ITERATOR6_XML,$;ITERATOR_LIST$;=$;OUTPUT_DIRECTORY$;/views/create_views/create_views.sql.list,$;NODISTRIB$;=1,$;GROUP_NUMBER$;=1"/>
	<!--This iterator will dump data from the tables via the views to flat files.-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR7,$;ITERATOR_XML$;=ITERATOR7_XML,$;ITERATOR_LIST$;=$;OUTPUT_DIRECTORY$;/views/chado.table.list,$;NODISTRIB$;=1,$;GROUP_NUMBER$;=1"/>
 	<command>
	    <type>RunUnixCommand</type>
	    <name>Truncate tables</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/ddl2iterator</executable>
            <param>
		<key>stdin</key>
		<value>$;DOCS_DIR$;/ddls/$;DATABASE_TYPE$;/truncate_tables.$;DATABASE_TYPE$;.ddl</value>
	    </param>
	    <param>
		<key>stdout</key>    
		<value>$;TMP_DIR$;/truncate_tables.list</value>
	    </param>
	    <param>
		<key>stderr</key>    
		<value>$;TMP_DIR$;/truncate_tables.stderr</value>
	    </param>
	</command>
	<!--This iterator will truncate all of the tables.-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR8,$;ITERATOR_XML$;=ITERATOR8_XML,$;ITERATOR_LIST$;=$;TMP_DIR$;/truncate_tables.list,$;NODISTRIB$;=1,$;GROUP_NUMBER$;=1"/>
 	<command>
	    <type>RunUnixCommand</type>
	    <name>Drop indices and constraints</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/ddl2iterator</executable>
            <param>
		<key>stdin</key>
		<value>$;DOCS_DIR$;/ddls/$;DATABASE_TYPE$;/drop_indexes.$;DATABASE_TYPE$;.ddl</value>
	    </param>
	    <param>
		<key>stdout</key>    
		<value>$;TMP_DIR$;/drop_indexes.list</value>
	    </param>
	    <param>
		<key>stderr</key>    
		<value>$;TMP_DIR$;/drop_indexes.stderr</value>
	    </param>
	</command>	
	<!--This iterator will drop all indices and constraints.-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR9,$;ITERATOR_XML$;=ITERATOR9_XML,$;ITERATOR_LIST$;=$;TMP_DIR$;/drop_indexes.list,$;NODISTRIB$;=1,$;GROUP_NUMBER$;=1"/>
	<!--This iterator will load data from the flat files into the tables.-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR10,$;ITERATOR_XML$;=ITERATOR10_XML,$;ITERATOR_LIST$;=$;OUTPUT_DIRECTORY$;/views/chado.table.list,$;NODISTRIB$;=1,$;GROUP_NUMBER$;=1"/>
 	<command>
	    <type>RunUnixCommand</type>
	    <name>Restore indices and constraints</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/ddl2iterator</executable>
            <param>
		<key>stdin</key>
		<value>$;DOCS_DIR$;/ddls/$;DATABASE_TYPE$;/create_indexes.$;DATABASE_TYPE$;.ddl</value>
	    </param>
	    <param>
		<key>stdout</key>    
		<value>$;TMP_DIR$;/create_indexes.list</value>
	    </param>
	    <param>
		<key>stderr</key>    
		<value>$;TMP_DIR$;/create_indexes.stderr</value>
	    </param>
	</command>	
	<!--This iterator will restore all indices and constraints.-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR11,$;ITERATOR_XML$;=ITERATOR11_XML,$;ITERATOR_LIST$;=$;TMP_DIR$;/create_indexes.list,$;NODISTRIB$;=1,$;GROUP_NUMBER$;=1"/>
	<!--This iterator will execute instructions to drop the views.-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR12,$;ITERATOR_XML$;=ITERATOR12_XML,$;ITERATOR_LIST$;=$;OUTPUT_DIRECTORY$;/views/drop_views/drop_views.sql.list,$;NODISTRIB$;=1,$;GROUP_NUMBER$;=1"/>
	<!--This iterator will get all table counts-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR13,$;ITERATOR_XML$;=ITERATOR13_XML,$;ITERATOR_LIST$;=$;OUTPUT_DIRECTORY$;/counts/all/select.sql.list,$;NODISTRIB$;=1,$;GROUP_NUMBER$;=1"/>
	<command>
	    <type>RunUnixCommand</type>
	    <name>Verify counts</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/checkDeletedTableRecordCounts</executable>
	    <param>
		<key>--analysis_id</key>
		<value>$;ANALYSIS_ID$;</value>
	    </param>
	    <param>
		<key>--algorithm</key>
		<value>$;ALGORITHM$;</value>
	    </param>
	    <param>
		<key>--feature_id</key>
		<value>$;FEATURE_ID$;</value>
	    </param>
            <param>
		<key>--is_obsolete</key>
		<value>$;IS_OBSOLETE$;</value>
	    </param>
	    <param>
		<key>--organism_id</key>
		<value>$;ORGANISM_ID$;</value>
	    </param>
	    <param>
		<key>--directory</key>
		<value>$;OUTPUT_DIRECTORY$;</value>
	    </param>
	    <param>
		<key>--logfile</key>
		<value>$;OUTPUT_DIRECTORY$;/checkDeletedTableRecordCounts.pl.log</value>
	    </param>
	    <param>
		<key>stdout</key>
		<value>$;OUTPUT_DIRECTORY$;/checkDeletedTableRecordCounts.pl.stdout</value>
	    </param>
	    <param>
		<key>stderr</key>
		<value>$;OUTPUT_DIRECTORY$;/checkDeletedTableRecordCounts.pl.stderr</value>
	    </param>
	</command>
 	<command>
	    <type>RunUnixCommand</type>
	    <name>Grant permissions</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/ddl2iterator</executable>
            <param>
		<key>stdin</key>
		<value>$;DOCS_DIR$;/ddls/$;DATABASE_TYPE$;/grant_all_public.$;DATABASE_TYPE$;.ddl</value>
	    </param>
	    <param>
		<key>stdout</key>    
		<value>$;TMP_DIR$;/grant_permissions.list</value>
	    </param>
	    <param>
		<key>stderr</key>    
		<value>$;TMP_DIR$;/grant_permissions.stderr</value>
	    </param>
	</command>
	<!--This iterator will grant permissions on the database.-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR14,$;ITERATOR_XML$;=ITERATOR14_XML,$;ITERATOR_LIST$;=$;TMP_DIR$;/grant_permissions.list,$;NODISTRIB$;=1,$;GROUP_NUMBER$;=1"/>
    </commandSet>
</commandSetRoot>
