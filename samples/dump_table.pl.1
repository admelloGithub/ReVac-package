.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DUMP_TABLE 1"
.TH DUMP_TABLE 1 "2015-07-29" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
dump_table.pl \- Dump the contents of an IGS MySQL Chado annotation database into .fsa and .tbl files that can be processed by NCBI\(aqs tbl2asn utility.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 14
\& USAGE: dump_table.pl
\&       --database_list=/path/to/database.list
\&       --username=db_user1
\&       --password=db_password1
\&       --server=annot_db.someplace.org
\&     [ --linker_sequence=NNNNNCACACACTTAATTAATTAAGTGTGTGNNNNN
\&       --contig_string='contig'
\&       --contig_id_replacement='_contigs\e.ctg/.ctg'
\&       --locus_db=TIGR_moore
\&       --output_dir=TIGR_moore
\&       --log=/path/to/file.log
\&       --help
\&       --test
\&     ]
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-\-database_list,\-d\fR
    The path to a list file with newline-seperated names of chado-compliant annotation databases that reside on the MySQL database server specified by \-\-server.
    If a comma (,) is added after the database name, then the user can specify a database_abbreviation.  This is essentially a shorter version of the database name that is used to generate contig ids.  If the generated contig ids are too long then they will clash with the sequence length in the \s-1LOCUS\s0 line of the GenBank flat file generated by tbl2asn.
.PP
\&\fB\-\-username,\-u\fR
    The MySQL username of a user with \s-1SELECT\s0 permissions on \-\-database.
.PP
\&\fB\-\-password,\-p\fR
    The MySQL password for the username specified by \-\-username on the MySQL server \-\-server.
.PP
\&\fB\-\-server,\-s\fR
    The MySQL server on which the database specified by the \-\-database option resides.
.PP
\&\fB\-\-linker_sequence,\-k\fR
    Optional.  Sequence on which to split sequences into contigs.  Set to the \s-1IGS\s0 \*(L"pmark\*(R" sequence 
    (\s-1NNNNNCACACACTTAATTAATTAAGTGTGTGNNNNN\s0) by default.
.PP
\&\fB\-\-contig_string,\-n\fR
    Optional.  String to use in constructing contig ids.  Default is \*(L"contig\*(R".  e.g., dbname.contig.0,
    dbname.contig.1, dbname.contig.2, etc.
.PP
\&\fB\-\-contig_id_replacement,\-r\fR
    Optional.  Perl-style substitution to apply to contig ids.  This can be used to ensure that dump_table.pl
    does not produce contig ids that are too long for tbl2asn to output to GenBank format, for example by
    setting the replacement to '_contigs\e.ctg/.ctg' in order to remove \*(L"_contigs\*(R" from each contig
    name.  Note that the replacement string must contain exactly one \*(L"/\*(R" character to separate the string
    being replaced from the replacement string.
.PP
\&\fB\-\-mapping_list \-m\fR
    Optional.  Allows the user to detect pmarks using a fuzznuc mapping file rather than the linker sequence
    \s-1NOTE:\s0  This feature is commented out and deprecated
.PP
\&\fB\-\-locus_db,\-c\fR
    Optional.  Chado db.name to use when querying for dbxrefs to output in NCBI/GenBank \*(L"locus_tag\*(R" 
    field.  Set to \*(L"TIGR_moore\*(R" by default.
.PP
\&\fB\-\-output_dir,\-o\fR
    Optional.  Directory into which to write the target .fsa and .tbl files.  Default is to use
    the current working directory.  Each database in the list will have a directory created
    within this output directory
.PP
\&\fB\-\-log,\-l\fR
    Optional.  Location of a log file to which error messages/warnings should be written.
.PP
\&\fB\-\-help,\-h\fR
    Optional.  Print this documentation.
.PP
\&\fB\-\-test,\-t\fR
    Optional.  Tests the contig-splitting code on synthetic data.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Dumps the contents of an \s-1IGS\s0 MySQL Chado annotation database into .fsa
and .tbl files that can be processed by \s-1NCBI\s0's tbl2asn utility.  The
sequences read from the database will be split into contigs using the
specified linker sequence (\-\-linker_sequence) and any contigs that are
composed entirely of Ns (or are empty) will be discarded and will not
be included in the output.  
.SH "INPUT"
.IX Header "INPUT"
A MySQL Chado annotation database list.
.PP
database1
database2,db2
.PP
In this case, database2 will have the contigs renamed to the abbreviation, db2.
.SH "OUTPUT"
.IX Header "OUTPUT"
Generates two files in the directory specified by \-\-output_dir:
.PP
1. database.fsa \- multi-FASTA file of contig sequences
2. database.tbl \- tbl2asn\-compatible feature table file
.SH "CONTACT"
.IX Header "CONTACT"
.Vb 2
\&    Kevin Galens
\&    kgalens@gmail.com
.Ve
