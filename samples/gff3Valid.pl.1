.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GFF3VALID 1"
.TH GFF3VALID 1 "2015-07-29" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    gff3Valid.pl some_file.gff3
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a \s-1GFF3\s0 validator for the \s-1BRC\s0 Interoperability Working Group (iowg.brcdevel.org).  This is
based on Lincoln Stein's \s-1GFF3\s0 1.01 spec but is more strict.  Our usage is defined here:
.PP
.Vb 1
\&    http://iowg.brcdevel.org/gff3.html
.Ve
.PP
This first version of the validator does not yet check many of the rules given in the document
above.  The \s-1VALIDATION\s0 section below describes each of the current validation checks.
.PP
Ontology directive targets may currently be local files or URLs (http or ftp).  URNs are not
currently supported.
.SH "VALIDATION"
.IX Header "VALIDATION"
The list below represents the current set of checks performed by this validator.
.IP "* note: general character class: [a\-zA\-Z0\-9.:_\-]" 4
.IX Item "note: general character class: [a-zA-Z0-9.:_-]"
.PD 0
.IP "* the gff3 file passed must exist" 4
.IX Item "the gff3 file passed must exist"
.IP "* the first line in the file must be the version definition" 4
.IX Item "the first line in the file must be the version definition"
.IP "* implied fasta directive usage not encouraged (warning)" 4
.IX Item "implied fasta directive usage not encouraged (warning)"
.IP "* feature-ontology directive should be passed (warning)" 4
.IX Item "feature-ontology directive should be passed (warning)"
.IP "* feature-ontology directive \s-1URI\s0, if passed, must be accessible" 4
.IX Item "feature-ontology directive URI, if passed, must be accessible"
.IP "* attribute-ontology directive should be passed (warning)" 4
.IX Item "attribute-ontology directive should be passed (warning)"
.IP "* attribute-ontology directive \s-1URI\s0, if passed, must be accessible" 4
.IX Item "attribute-ontology directive URI, if passed, must be accessible"
.IP "* format of ##sequence\-region directive must be: ##sequence\-region seqid start end" 4
.IX Item "format of ##sequence-region directive must be: ##sequence-region seqid start end"
.IP "* directives not in the spec are not allowed" 4
.IX Item "directives not in the spec are not allowed"
.IP "* data lines must have 9 tab-delimited columns" 4
.IX Item "data lines must have 9 tab-delimited columns"
.IP "* column1, seqid, must match the general character class" 4
.IX Item "column1, seqid, must match the general character class"
.IP "* column2, source, cannot be whitespace or empty (. for none)" 4
.IX Item "column2, source, cannot be whitespace or empty (. for none)"
.IP "* column3, type, must have an entry in the feature ontology" 4
.IX Item "column3, type, must have an entry in the feature ontology"
.IP "* column4, start, must be an integer" 4
.IX Item "column4, start, must be an integer"
.IP "* column5, end, must be an integer" 4
.IX Item "column5, end, must be an integer"
.IP "* start must be <= end" 4
.IX Item "start must be <= end"
.IP "* column6, score, must be a floating point number such as 5e\-3 \-5e+10 5E\-3 5E+20 but \s-1NOT\s0 e\-10" 4
.IX Item "column6, score, must be a floating point number such as 5e-3 -5e+10 5E-3 5E+20 but NOT e-10"
.IP "* column7, strand, must be one of [\-+.?]" 4
.IX Item "column7, strand, must be one of [-+.?]"
.IP "* column8, phase, must be one of [012.]" 4
.IX Item "column8, phase, must be one of [012.]"
.IP "* column9, attributes, must be in key=value format, with multiple values within a key separated by commas and multiple key=value pairs separated by a semi-colon" 4
.IX Item "column9, attributes, must be in key=value format, with multiple values within a key separated by commas and multiple key=value pairs separated by a semi-colon"
.IP "* each attribute key must be defined in the attribute ontology" 4
.IX Item "each attribute key must be defined in the attribute ontology"
.IP "* Dbxref attributes must be in the form db:id" 4
.IX Item "Dbxref attributes must be in the form db:id"
.IP "* Ontology_term attributes must be in the form \s-1AA:0000000\s0" 4
.IX Item "Ontology_term attributes must be in the form AA:0000000"
.IP "* ec_number attributes must be in the form of N.N.N.N" 4
.IX Item "ec_number attributes must be in the form of N.N.N.N"
.IP "* molecule_type attributes must be either dsDNA | ssDNA | dsRNA | ssRNA" 4
.IX Item "molecule_type attributes must be either dsDNA | ssDNA | dsRNA | ssRNA"
.IP "* topology attributes must be either linear | circular" 4
.IX Item "topology attributes must be either linear | circular"
.IP "* localization attributes must be either mitochondrion | plastid | episome | plasmid | nuclear | chromosomal" 4
.IX Item "localization attributes must be either mitochondrion | plastid | episome | plasmid | nuclear | chromosomal"
.IP "* if the feature type (column 3) is mRNA or \s-1SO:0000234\s0, the following attributes are required: \s-1ID\s0, Name, Dbxref, description" 4
.IX Item "if the feature type (column 3) is mRNA or SO:0000234, the following attributes are required: ID, Name, Dbxref, description"
.IP "* if the feature type (column 3) is contig, \s-1SO:0000149\s0, supercontig or \s-1SO:0000148\s0, the following attributes are required: \s-1ID\s0, Name, molecule_type, organism_name, translation_table, Dbxref.  Also, Dbxref must point to a taxon id." 4
.IX Item "if the feature type (column 3) is contig, SO:0000149, supercontig or SO:0000148, the following attributes are required: ID, Name, molecule_type, organism_name, translation_table, Dbxref.  Also, Dbxref must point to a taxon id."
.IP "* each seqid referenced in column 1 must also have a contig or supercontig definition within the \s-1GFF3\s0 file." 4
.IX Item "each seqid referenced in column 1 must also have a contig or supercontig definition within the GFF3 file."
.IP "* each seqid referenced in column 1 must also have a \s-1FASTA\s0 sequence within the \s-1GFF3\s0 file." 4
.IX Item "each seqid referenced in column 1 must also have a FASTA sequence within the GFF3 file."
.IP "* there must be at least one row of type mRNA cds and exon" 4
.IX Item "there must be at least one row of type mRNA cds and exon"
