[empty]

[create_output_directory]
param.command = mkdir
arg           = -p -m 777 $;OUTPUT_DIRECTORY$;

[mapping]
param.command       = $;BIN_DIR$;/featureMapping2Chado
param.--database    = $;DATABASE$;
param.--server      = $;SERVER$;
param.--username    = $;USERNAME$;
param.--password    = $;PASSWORD$;
param.--debug_level = $;DEBUG$;
param.--log4perl    = $;WORKFLOW_REPOSITORY$;/featureMapping2Chado.pl.log
param.--type1       = $;SEQUENCE_TYPE1$;
param.--type2       = $;SEQUENCE_TYPE2$;
param.--outdir      = $;OUTPUT_DIRECTORY$;


[load_featureloc]
param.command       = $;BIN_DIR$;/chadoloader
param.--username    = chado_admin
param.--password    = chado_admin99
param.--database    = $;DATABASE$;
param.--server      = $;SERVER$;
param.--bcpmode     = in
param.--batchsize   = 30000
param.--logfile     = $;WORKFLOW_REPOSITORY$;/chadoloader.pl.log
param.--directory   = $;OUTPUT_DIRECTORY$;
param.--stdout      = $;WORKFLOW_REPOSITORY$;/chadoloader.pl.stdout
param.--abort       = 1
param.--debug_level = $;DEBUG$;


[gzip_files]
param.command = $;BIN_DIR$;/compress_file
param.--file  = '$;OUTPUT_DIRECTORY$;/*.out'



[create_database_lockfile]
;
; create database lock file in the repository root to traffic/prevent other
; database manipulating workflows from accessing the same database at the same time
param.command=$;BIN_DIR$;/gatekeeper
param.database=$;DATABASE$;
param.username=$;USERNAME$;
param.component=$;NAME$;
param.log4perl=$;WORKFLOW_REPOSITORY$;/gatekeeper.create.log
param.action=create
param.repository=$;REPOSITORY_ROOT$;/workflow/lock_files
param.pipeline=$;REPOSITORY_ROOT$;/Workflow/pipeline/$;PIPELINEID$;/pipeline.xml.instance


[remove_database_lockfile]
;
; remove database lock file from the repository root which was to traffic/prevent other
; database manipulating workflows from accessing the same database at the same time
param.command=$;BIN_DIR$;/gatekeeper
param.database=$;DATABASE$;
param.username=$;USERNAME$;
param.component=$;NAME$;
param.log4perl=$;WORKFLOW_REPOSITORY$;/gatekeeper.remove.log
param.action=remove
param.repository=$;REPOSITORY_ROOT$;/workflow/lock_files
param.pipeline=$;REPOSITORY_ROOT$;/Workflow/pipeline/$;PIPELINEID$;/pipeline.xml.instance

