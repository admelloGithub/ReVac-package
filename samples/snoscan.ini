;workflow for snoscan
[empty]

[snoscan]
;Execute the snoscan search
param.command=/usr/local/bin/snoscan
arg=$;OTHER_OPTS$; $;TARGET_SEQUENCE_FILE$; $;ITER_FILE_PATH$;
param.stdout=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.$;NAME$;.raw

[sort-snos]
;Execute sort-snos
param.command=$;BIN_DIR$;/sort_snoscan_output
arg=-i $;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.$;NAME$;.raw -o $;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.$;NAME$;.sorted -g $;SORT$; $;OTHER_SORT_OPTS$; 

[store_config_params]
;store parameters associated with analysis in bsml file
;workflow will pass add'l optional parameters if invoked with LoggedUnixCommand
;--command-id
param.command=$;BIN_DIR$;/analysis2bsml
param.--ergatis_control_file=$;ERGATIS_DIR$;.ini
param.--conf=$;COMPONENT_CONFIG$;
param.--bsml_file=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.$;NAME$;.bsml
param.--componenturl=$;WORKFLOW_REPOSITORY$;/pipeline.xml
param.--pipelineurl=$;REPOSITORY_ROOT$;/Workflow/pipeline/pipeline$;PIPELINEID$;.xml
param.--analysis_id=$;NAME$;_analysis

[snoscan2bsml]
param.command=$;BIN_DIR$;/snoscan2bsml
param.--input=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.$;NAME$;.sorted
param.--output=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.$;NAME$;.bsml
param.--class=$;SEQUENCE_CLASS$;
param.--compress_bsml_output=$;COMPRESS_BSML_OUTPUT$;
param.--fasta_input=$;ITER_FILE_PATH$;

[dtd_validation]
;perform document schema validation
param.command=$;BIN_DIR$;/dtdValid.pl
param.-d=$;SCHEMA_DIR$;/bsml3_1.dtd
arg=$;OUTPUT_DIRECTORY$;/$;GROUP_NAME$;/$;ITER_FILE_BASE$;.$;NAME$;.bsml
