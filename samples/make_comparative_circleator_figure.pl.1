.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MAKE_COMPARATIVE_CIRCLEATOR_FIGURE 1"
.TH MAKE_COMPARATIVE_CIRCLEATOR_FIGURE 1 "2015-07-29" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
make\-clovr\-comparative\-circleator\-figure.pl \- Automatically generate and rasterize a Circleator figure given GenBank format input file(s).
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
make\-clovr\-comparative\-circleator\-figure.pl
         \-\-circleator_path=/usr/local/packages/circleator/bin/circleator
         \-\-rasterizer_path=/usr/local/packages/circleator/bin/rasterize\-svg
         \-\-gb_list_file=genbank.list
         \-\-gene_summary_file=clovr_gene_summary.txt
         \-\-snp_file=somefile_mini.snps
        [\-\-svg_file=figure.svg
         \-\-output_dir=.
         \-\-output_formats='pdf,jpg'
         \-\-output_width=3000
         \-\-output_height=3000
         \-\-help
         \-\-man]
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-\-gb_list_file,\-l\fR
    Path to the file used in the \s-1INPUT_FILE_LIST\s0 parameter of the second step (genbank2bsml.default)
    of the CloVR comparative pipeline. The gb_list_file lists the paths to the GenBank files (one
    per line) used as input to the comparative pipeline.
.PP
\&\fB\-\-gene_summary_file,\-g\fR
    Path to one of the gene summary files produced by the CloVR comparative pipeline.
.PP
\&\fB\-\-snp_file\fR
    Path to the \s-1SNP\s0 file produced by the CloVR comparative pipeline.
.PP
\&\fB\-\-circleator_path\fR
    Path to the \*(L"circleator\*(R" script in the bin/ directory of the Circleator distribution.
.PP
\&\fB\-\-rasterizer_path\fR
    Path to the \*(L"rasterize\-svg\*(R" script in the bin/ directory of the Circleator distribution.
.PP
\&\fB\-\-svg_file,\-s\fR
    Optional. Name of the \s-1SVG\s0 file to generate in \-\-output_dir. Default is \*(L"figure.svg\*(R"
.PP
\&\fB\-\-output_dir\fR
    Optional. Path to the directory in which the contig list file, Circleator configuration file,
    output \s-1SVG\s0 file, and rasterized file(s) should be written. Default is current working directory.
.PP
\&\fB\-\-output_formats\fR
    Optional. Comma-delimited list of formats ('png', 'jpg', or 'pdf') to which \s-1SVG\s0 should 
    be rasterized/converted. Default is 'pdf,jpg'
.PP
\&\fB\-\-output_width\fR
    Optional. Width of the final rasterized/converted images. Default is 3000.
.PP
\&\fB\-\-output_height\fR
    Optional. Height of the final rasterized/converted images. Default is 3000.
.PP
\&\fB\-\-help,\-h\fR 
    Display the script documentation.
.PP
\&\fB\-\-man,\-m\fR
    Display the script documentation.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a wrapper script for Circleator that performs the following tasks:
.PP
1. Parses the CloVR-comparative gene summary file specified by \-\-gene_summary_file.
2. Identifies the set of GenBank files that correspond to the reference genes in \-\-gene_summary_file
3. Creates a Circleator \-\-contig_list file for all of the GenBank files identified in the previous step.
4. Converts the gene cluster information in \-\-gene_summary_file into a standard Circleator format.
5. Creates a custom Circleator configuration file that displays:
  a. The reference genes (forward and reverse strand)
  b. The \*(L"core\*(R" genes (those present in all strains according to the gene clusters)
  c. The unique genes (those present only in the reference strain according to the gene clusters)
  d. The unique SNPs (positions where the reference differs from _all_ of the other strains)
6. Runs the Circleator to generate an SVG-format figure
7. Runs the \s-1SVG\s0 rasterizer to convert the \s-1SVG\s0 file into \s-1PDF\s0, \s-1PNG\s0, or \s-1JPEG\s0
.SH "INPUT"
.IX Header "INPUT"
The following input and output files from an instance of the CloVR-Comparative ergatis pipeline:
 o the \s-1INPUT_FILE_LIST\s0 of the genbank2bsml.default component
   i.e., a list of GenBank files
 o one of the gene summary files produced by the pipeline
 o the \s-1SNP\s0 output file produced by the pipeline
.SH "OUTPUT"
.IX Header "OUTPUT"
A graphical plot of the input sequence(s) in both \s-1SVG\s0 format and whatever format is specified
by the \-\-output_format option.
.SH "CONTACT"
.IX Header "CONTACT"
.Vb 2
\&    Jonathan Crabtree
\&    jonathancrabtree@gmail.com
.Ve
