.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FGENESH2BSML 1"
.TH FGENESH2BSML 1 "2015-07-29" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
fgenesh2bsml.pl \- convert fgenesh output to BSML
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\s-1USAGE:\s0 fgenesh2bsml.pl 
        \-\-input_file=/path/to/fgenesh.raw.file 
        \-\-output=/path/to/output.bsml
        \-\-project=aa1 
        \-\-fasta_input=/path/to/somefile.fsa 
        \-\-id_repository=/path/to/repository
        \-\-sourcename=sourcename
        \-\-programversion='current'
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-\-input_file,\-f\fR 
    Input file file from a fgenesh run.  \-i, \-\-input_list, will take in a list
    of input files, all of which will be stored in a single output bsml.
.PP
\&\fB\-\-output,\-o\fR 
    Output \s-1BSML\s0 file (will be created, must not exist)
.PP
\&\fB\-\-project,\-p\fR 
    Project \s-1ID\s0.  Used in creating feature ids. 
.PP
\&\fB\-\-fasta_input,\-a\fR
    Needed to create a Seq-data-import element referencing this path.
.PP
\&\fB\-\-id_repository,\-r\fR
    path to \-\-project's id_repository
.PP
\&\fB\-\-programversion,\-v\fR
    Version string to be used as value for the analysis attribute 'programversion'
.PP
\&\fB\-\-sourcename,\-s\fR
    Sourcename string to be used as value for the analysis attribute 'sourcename'
    Due to a silly hack in analysis2bsml.pl, you might need to put /dummy/dir at
    the end of it.
.PP
\&\fB\-\-log,\-l\fR 
    Log file
.PP
\&\fB\-\-debug,\-d\fR 
    Debug level.  Use a large number to turn on verbose debugging. 
.PP
\&\fB\-\-help,\-h\fR 
    This help message
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script is used to convert the output from a fgenesh search into \s-1BSML\s0.
.SH "INPUT"
.IX Header "INPUT"
You define the input file using the \-\-input_file option.  This file does not need any
special file extension.  The regular prediction output of fgenesh looks like this:
(Excluding header lines)
.Sp
.Vb 7
\&      Gn S   Type   Start       End   Score        ORF           Len
\&      -- -   ----   -----       ---   -----        ---           ---
\&       1 +   TSS    19447             -7.15  
\&       1 +   CDSf   19541 -   19632   16.12   19541 -   19630     90
\&       1 +   CDSi   19755 -   19977   14.12   19756 -   19977    222
\&       1 +   CDSl   20833 -   20961    2.99   20833 -   20961    129
\&       1 +   PolA   21055              1.05
.Ve
.Sp
.Vb 5
\&       2 +   TSS    34437             -7.15  
\&       2 +   CDSf   34531 -   34622   15.25   34531 -   34620     90
\&       2 +   CDSi   34745 -   34967   20.74   34746 -   34967    222
\&       2 +   CDSl   35854 -   35982    5.59   35854 -   35982    129
\&       2 +   PolA   36043              1.05
.Ve
.Sp
.Vb 5
\&       3 +   TSS    39373             -7.15  
\&       3 +   CDSf   39467 -   39558   15.25   39467 -   39556     90
\&       3 +   CDSi   39681 -   39903   20.74   39682 -   39903    222
\&       3 +   CDSl   40770 -   40898    5.74   40770 -   40898    129
\&       3 +   PolA   40959              1.05
.Ve
.Sp
.Vb 4
\&       4 +   TSS    44415             -8.75  
\&       4 +   CDSf   45995 -   46151   16.01   45995 -   46150    156
\&       4 +   CDSl   46997 -   47100    2.71   46999 -   47100    102
\&       4 +   PolA   47243              1.05
.Ve
.Sp
.Vb 5
\&       5 +   TSS    54703             -4.45  
\&       5 +   CDSf   54790 -   54881   13.41   54790 -   54879     90
\&       5 +   CDSi   55010 -   55232   14.20   55011 -   55232    222
\&       5 +   CDSl   56131 -   56259    3.87   56131 -   56259    129
\&       5 +   PolA   56365              1.05
.Ve
.Sp
.Vb 5
\&       6 +   TSS    62100             -6.65  
\&       6 +   CDSf   62187 -   62278   13.59   62187 -   62276     90
\&       6 +   CDSi   62409 -   62631   19.50   62410 -   62631    222
\&       6 +   CDSl   63482 -   63610   10.23   63482 -   63610    129
\&       6 +   PolA   63718              1.05
.Ve
.Sp
.Vb 3
\&       7 +   TSS    68088             -9.45  
\&       7 +   CDSo   68183 -   68428   14.87   68183 -   68428    246
\&       7 +   PolA   68509              1.05
.Ve
.Sp
.Vb 27
\&    Predicted protein(s):
\&    >ID  1   3 exon (s)  19541  -  20961    147 aa, chain +
\&    MVHFTAEEKAAVTSLWSKMNVEEAGGEALGRLLVVYPWTQRFFDSFGNLSSPSAILGNPK
\&    VKAHGKKVLTSFGDAIKNMDNLKPAFAKLSELHCDKLHVDPENFKLLGNVMVIILATHFG
\&    KEFTPEVQAAWQKLVSAVAIALAHKYH
\&    >ID  2   3 exon (s)  34531  -  35982    147 aa, chain +
\&    MGHFTEEDKATITSLWGKVNVEDAGGETLGRLLVVYPWTQRFFDSFGNLSSASAIMGNPK
\&    VKAHGKKVLTSLGDAIKHLDDLKGTFAQLSELHCDKLHVDPENFKLLGNVLVTVLAIHFG
\&    KEFTPEVQASWQKMVTGVASALSSRYH
\&    >ID  3   3 exon (s)  39467  -  40898    147 aa, chain +
\&    MGHFTEEDKATITSLWGKVNVEDAGGETLGRLLVVYPWTQRFFDSFGNLSSASAIMGNPK
\&    VKAHGKKVLTSLGDAIKHLDDLKGTFAQLSELHCDKLHVDPENFKLLGNVLVTVLAIHFG
\&    KEFTPEVQASWQKMVTAVASALSSRYH
\&    >ID  4   2 exon (s)  45995  -  47100     86 aa, chain +
\&    MGNPKVKAHGKKVLISFGKAVMLTDDLKGTFATLSDLHCNKLHVDPENFLVSTLRQRDID
\&    CFGNPLQRGFYPTDTGFLAVTNKCCG
\&    >ID  5   3 exon (s)  54790  -  56259    147 aa, chain +
\&    MVHLTPEEKTAVNALWGKVNVDAVGGEALGRLLVVYPWTQRFFESFGDLSSPDAVMGNPK
\&    VKAHGKKVLGAFSDGLAHLDNLKGTFSQLSELHCDKLHVDPENFRLLGNVLVCVLARNFG
\&    KEFTPQMQAAYQKVVAGVANALAHKYH
\&    >ID  6   3 exon (s)  62187  -  63610    147 aa, chain +
\&    MVHLTPEEKSAVTALWGKVNVDEVGGEALGRLLVVYPWTQRFFESFGDLSTPDAVMGNPK
\&    VKAHGKKVLGAFSDGLAHLDNLKGTFATLSELHCDKLHVDPENFRLLGNVLVCVLAHHFG
\&    KEFTPPVQAAYQKVVAGVANALAHKYH
\&    >ID  7   1 exon (s)  68183  -  68428     81 aa, chain +
\&    MEQSWAENDFDELREEGFRRSNYSKLKEEVRTNGKEVKNFEKKLDEWITRITNAQKSLKD
\&    LMELKTKAGELRDKYTSLSNR
.Ve
.PP
The prediction output has the general form of:
(modified from http://linux1.softberry.com/berry.phtml?topic=fgenesh&group=help&subgroup=gfind
 to make sense)
.PP
.Vb 12
\&    Gn    - predicted gene number, starting from start of sequence;
\&    S     - DNA strand (+ for direct or - for complementary);
\&    Type  - type of coding sequence:
\&          CDSf - First (Starting with Start codon),
\&          CDSi - internal (internal exon),
\&          CDSl - last coding segment, ending with stop codon),
\&          TSS  - Position of transcription start (TATA-box position and score);
\&          PolA - Position of Polyadenylation site
\&    Start - Start position of the Feature;
\&    End   - End Position of the Feature;
\&    Score - score for this Feature;
\&    ORF   - start/end positions where the first complete codon starts and the last codon ends.
.Ve
.SH "OUTPUT"
.IX Header "OUTPUT"
Base positions from the input file are renumbered so that positions start at zero and
reflect interbase numbering.  
.SH "CONTACT"
.IX Header "CONTACT"
.Vb 2
\&    Jason Inman
\&    jinman@tigr.org
.Ve
