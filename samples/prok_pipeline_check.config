[interface]
classification = utility

[parameters]
;; If including transcript level computes in data checks
$;INCLUDE_TRANSCRIPT_LEVEL$; = 0
;;This log file will hold only warnings and errors
$;LOG$; = 
;;Pipeline Id and Repository Root of Prok Pipeline to check
$;CHECK_PIPELINEID$; = $;PIPELINEID$;
$;CHECK_REPOSITORY_ROOT$; = $;REPOSITORY_ROOT$;

[input]
;;There is no input to the program (except the pipeline id and repository root

[output]
$;OUTPUT_TOKEN$; = default
$;OUTPUT_DIRECTORY$; = $;REPOSITORY_ROOT$;/output_repository/$;COMPONENT_NAME$;/$;PIPELINEID$;_$;OUTPUT_TOKEN$;
;;This logfile will contain all output from the program
$;OUTPUT_LOGILE$; = $;OUTPUT_DIRECTORY$;/$;PIPELINEID$;_log.txt

[component]
$;COMPONENT_NAME$; = prok_pipeline_check
$;DESCRIPTION$; = none
$;WORKFLOW_REPOSITORY$; = $;REPOSITORY_ROOT$;/workflow/runtime/$;COMPONENT_NAME$;/$;PIPELINEID$;_$;OUTPUT_TOKEN$;
$;PIPELINE_TOKEN$; = unnamed

;The version,revision,tag here is set by an interpolated CVS tag
$;VERSION$; = 2.0
$;RELEASE_TAG$; = $Name$
$;REVISION$;            = $Revision: 4680 $

$;TEMPLATE_XML$; = $;DOCS_DIR$;/$;COMPONENT_NAME$;.xml

;the following keys are replaced at runtime by the invocation script
$;COMPONENT_CONFIG$; = 
$;COMPONENT_XML$; = 
$;PIPELINE_XML$; = 
$;PIPELINEID$; = 

[include]
$;PROJECT_CONFIG$;=


