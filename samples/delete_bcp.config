[interface]
classification = database / manipulation

[parameters]
$;SERVER$;=
$;DATABASE$; = 
;; The relational database management system type must be specified as
;; either sybase or postgresql.  This information is necessary for
;; correctly parsing the tab-delimited BCP files.  Different database types
;; use different field and record delimiters.
$;DATABASE_TYPE$; = sybase
$;BCP_EXTENSION$; = out

[input]
;; This input file list should be a file containing a new-line separated list of BCP files
$;INPUT_FILE_LIST$; = 
;; This input file value should be a comma-separated list of BCP files
$;INPUT_FILE$; = 
;; This input directory value should the fullpath to a directory containing BCP files
$;INPUT_DIRECTORY$; = 

[output]
$;OUTPUT_TOKEN$; = default
$;OUTPUT_DIRECTORY$; = $;REPOSITORY_ROOT$;/output_repository/$;COMPONENT_NAME$;/$;PIPELINEID$;_$;OUTPUT_TOKEN$;

[component]
$;COMPONENT_NAME$; = delete_bcp
$;WORKFLOW_REPOSITORY$; = $;REPOSITORY_ROOT$;/workflow/runtime/$;COMPONENT_NAME$;/$;PIPELINEID$;_$;OUTPUT_TOKEN$;
$;PIPELINE_TOKEN$; = unnamed

;The version,revision,tag here is set by an interpolated CVS tag
$;VERSION$;     = 2.0
$;RELEASE_TAG$; = $Name$
$;REVISION$;    = $Revision$

$;TEMPLATE_XML$; = $;DOCS_DIR$;/$;COMPONENT_NAME$;.xml

; Iterator for processing and loading all OBO files
$;ITERATOR1$; =   create_sql
$;ITERATOR1_XML$; = $;DOCS_DIR$;/$;COMPONENT_NAME$;.$;ITERATOR1$;.xml
$;ITERATOR2$; =   sql
$;ITERATOR2_XML$; = $;DOCS_DIR$;/$;COMPONENT_NAME$;.$;ITERATOR2$;.xml
$;ITERATOR3$; =   execute_sql
$;ITERATOR3_XML$; = $;DOCS_DIR$;/$;COMPONENT_NAME$;.$;ITERATOR3$;.xml

;Distributed options
$;GROUP_COUNT$; = 1
; no-distrib = 0 ensures that all executes in series and never parallel
$;NODISTRIB$; = 0

;the following keys are replaced at runtime by the invocation script
$;COMPONENT_CONFIG$; = 
$;COMPONENT_XML$; = 
$;PIPELINE_XML$; = 
$;PIPELINEID$; = 

[include]
$;PROJECT_CONFIG$;=
