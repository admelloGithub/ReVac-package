<?xml version="1.0" encoding="UTF-8"?>

<commandSetRoot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation='commandSet.xsd'>
    <commandSet type="serial">
        <state>incomplete</state>
        <name>velvet workflow</name>
        <!--Preprocessing-->
        <command>
            <type>RunUnixCommand</type>
            <name>create output directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;OUTPUT_DIRECTORY$;</arg>
        </command>
        <command>                
            <type>RunUnixCommand</type>
            <name>create temp directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;TMP_DIR$;</arg>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>replace template keys</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/replace_template_keys</executable>
            <param>
               <key>--template_xml</key>
               <value>$;DOCS_DIR$;/celera-assembler-distributed.xml</value>
            </param>
            <param>
               <key>--component_conf</key>
               <value>$;COMPONENT_CONFIG$;</value>
            </param>
            <param>
               <key>--output_xml</key>
               <value>$;WORKFLOW_REPOSITORY$;/celera-assembler-distributed.xml</value>
            </param>
            <param>
               <key>--distribopts</key>
               <value>nodistrib=$;NODISTRIB$;</value>
            </param>
            <param>
               <key>stdout</key>
               <value>$;TMP_DIR$;/replace_template_keys.stdout</value>
            </param>
            <param>
               <key>stderr</key>
               <value>$;TMP_DIR$;/replace_template_keys.stderr</value>
            </param>
        </command>
        <!--Processing-->
        <commandSet type="remote-serial">
            <state>incomplete</state>
            <name>run Celera Assembler</name>
            <fileName>$;WORKFLOW_REPOSITORY$;/celera-assembler-distributed.xml</fileName>
            <dceSpec type="sge">
                <group>$;PROJECT_CODE$;</group>
                <OS>linux</OS>
            </dceSpec>
        </commandSet>
        <!--Postprocessing-->         
        <command>
            <type>RunUnixCommand</type>
            <name>create assembly file list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>              
            </param>
            <param>
                <key>--regex</key>
                <value>".*\.asm"</value>                
            </param>
            <param>
                <key>--output_list</key>
                <value>$;ASM_OUTPUT_LIST$;</value>
            </param>
        </command>            
        <command>
            <type>RunUnixCommand</type>
            <name>create quality assessment file list</name>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>
                <key>--regex</key>
                <value>".*\.qc"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;QC_OUTPUT_LIST$;</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create chimera summary list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>
                <key>--regex</key>
                <value>".*chimera\.summary"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;CHIMERA_SUMMARY_OUTPUT_LIST$;</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create chimera report list </name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>
                <key>--regex</key>
                <value>".*chimera\.report"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;CHIMERA_REPORT_OUTPUT_LIST$;</value>
            </param>
        </command>  
        <command>
            <type>RunUnixCommand</type>
            <name>create merge log list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>              
            <param>
                <key>--regex</key>
                <value>".*\.mergeLog"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;MERGE_LOG_OUTPUT_LIST$;</value>
            </param>
        </command>     
        <command>
            <type>RunUnixCommand</type>
            <name>create scf fasta list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>              
            <param>
                <key>--regex</key>
                <value>".*\.scf.fasta"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;SCF_FASTA_OUTPUT_LIST$;</value>
            </param>
        </command>                                
    </commandSet>    
</commandSetRoot>                
