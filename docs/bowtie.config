[interface]
classification = RNA-Seq

[parameters]
;; path to bowtie package binary directory
$;BOWTIE_BIN_DIR$; = $;BOWTIE_BIN$;
;; path to samtools package binary directory
$;SAMTOOLS_BIN_DIR$; = $;SAMTOOLS_BIN$;
;; bowtie alignment mode ('v' or 'n'). Default:v.
$;MODE$; = v
;; allowed number of mismatches limited to 3 for 'n' alignment mode. Default:2.
$;NUM_MISMATCHES$; = 2
;; input file type ('fastq' or 'fasta'). Default:fastq
$;FILE_TYPE$; = fastq
;; seed length. Minimum:5. Default:28
$;SEED_LENGTH$; = 
;; minimum insert size for valid paired-end alignments. Default:0.
$;MIN_INSERT$; = 
;; maximum insert size for valid paired-end alignments. Default:250.
$;MAX_INSERT$; = 
;; The upstream/downstream mate orientations for a valid paired-end alignment ('fr', 'rf' or 'ff'). Default:fr.
$;LIBRARY_TYPE$; = 
;; maximum valid alignments per read or pair. Default:1.
$;NUM_HITS$; = 
;; Suppress all alignments for a particular read or pair if more than defined threshold of reportable alignments exist for it. Default:off
$;MAX_MULTIHITS$; = 
;; Report one hit for a particular read or pair if more than defined threshold of reportable alignments exist for it. Default:off.
$;REPORT_MULTIHITS$; = 
;; filename to write all reads that could not be aligned.
$;UNMAPPED_READS$; = unmapped_sequence.txt
;; number of parallel search threads . Default:1.
$;NUM_THREADS$; = 

;; '--sam' for SAM alignment output and other additional bowtie parameters.
$;OTHER_PARAMETERS$; = --sam
;; use --gzip if input files are gzipped and --v for verbose summary
$;OTHER_ARGS$; = --v

[input]
;; path to sequence file consisting of first mates
$;INPUT_FILE_1$; =
;; path to sequence file consisting of second mates (if paired-end sequencing)
$;INPUT_FILE_2$; =
;; path to list file consisting of tab separated first mate and second mate sequence files
$;INPUT_FILE_LIST$; = 
;; path to directory of multiple single mate sequence files
$;INPUT_DIRECTORY$; = 
;; file extension for single mate sequence files (to be used when iterating over an INPUT_DIRECTORY)
$;INPUT_EXTENSION$; = txt
;; path to bowtie index directory
$;BOWTIE_INDEX_DIR$; = 
;; bowtie index prefix
$;BOWTIE_INDEX_PREFIX$; = 

[output]
;; use a unique sample name
$;OUTPUT_TOKEN$; = default
;; output directory for component results
$;OUTPUT_DIRECTORY$; = $;REPOSITORY_ROOT$;/output_repository/$;COMPONENT_NAME$;/$;PIPELINEID$;_$;OUTPUT_TOKEN$;
;; list of alignment SAM files
$;OUTPUT_ALIGNMENT_SAM_FILE$; = $;OUTPUT_DIRECTORY$;/$;COMPONENT_NAME$;.sam.list
;; list of alignment BAM files
$;OUTPUT_ALIGNMENT_BAM_FILE$; = $;OUTPUT_DIRECTORY$;/$;COMPONENT_NAME$;.bam.list

[component]
$;COMPONENT_NAME$; = bowtie
$;DESCRIPTION$; = generates bowtie alignment for the input sequence file(s) against the given reference index file.
$;WORKFLOW_REPOSITORY$; = $;REPOSITORY_ROOT$;/workflow/runtime/$;COMPONENT_NAME$;/$;PIPELINEID$;_$;OUTPUT_TOKEN$;
$;PIPELINE_TOKEN$; = unnamed

;;bowtie version
$;VERSION$; = Bowtie version 0.12.7

$;TEMPLATE_XML$; = $;DOCS_DIR$;/$;COMPONENT_NAME$;.xml
$;ITERATOR1$; = i1
$;ITERATOR1_XML$; = $;DOCS_DIR$;/$;COMPONENT_NAME$;.$;ITERATOR1$;.xml

;;Distributed options
$;GROUP_COUNT$; = 150
$;NODISTRIB$; = 0

;;the following keys are replaced at runtime by the invocation script
$;COMPONENT_CONFIG$; = 
$;COMPONENT_XML$; = 
$;PIPELINE_XML$; = 
$;PIPELINEID$; = 

[include]
$;PROJECT_CONFIG$; = 
