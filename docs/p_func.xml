<?xml version="1.0" encoding="UTF-8"?>

<commandSetRoot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation='commandSet.xsd'>
    <commandSet type="serial">
        <state>incomplete</state>
        <name>assign_gene_function workflow</name>
        <!--Preprocessing-->
        <command>
            <type>RunUnixCommand</type>
            <name>create output directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;OUTPUT_DIRECTORY$;</arg>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create temp directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;TMP_DIR$;</arg>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>concatenate files</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/concatenate_files</executable>
            <param>
                <key>--input_lists</key>
                <value>$;INPUT_TAB_LISTS$;</value>
            </param>
            <param>
                <key>--output</key>
                <value>$;OUTPUT_DIRECTORY$;/$;OUTPUT_FILE_BASE_NAME$;.concat.tab</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>sort file</name>
            <state>incomplete</state>
            <executable>$;SORT_BIN$;</executable>
            <arg>$;OUTPUT_DIRECTORY$;/$;OUTPUT_FILE_BASE_NAME$;.concat.tab</arg>
            <param>
               <key>stdout</key>
               <value>$;OUTPUT_DIRECTORY$;/$;OUTPUT_FILE_BASE_NAME$;.sorted.tab</value>
            </param>
        </command>        
        <command>
            <type>RunUnixCommand</type>
            <name>assign annotations</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/assign_annotations</executable>
            <param>
                <key>--input_files</key>
                <value>$;OUTPUT_DIRECTORY$;/$;OUTPUT_FILE_BASE_NAME$;.sorted.tab</value>
            </param>
            <param>
                <key>--output</key>
                <value>$;OUTPUT_DIRECTORY$;/$;OUTPUT_FILE_BASE_NAME$;.assigned.tab</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>post process tab file</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/post_process_annotations</executable>
            <param>
                <key>--input_file</key>
                <value>$;OUTPUT_DIRECTORY$;/$;OUTPUT_FILE_BASE_NAME$;.assigned.tab</value>
            </param>
            <param>
                <key>--output</key>
                <value>$;OUTPUT_DIRECTORY$;/$;OUTPUT_FILE_BASE_NAME$;.processed.tab</value>
            </param>
            <param>
                <key>--tigr_roles_db_dir</key>
                <value>$;ROLES_DB_DIR$;</value>
            </param>
	    <param>
		<key>--input_ec_dat</key>
		<value>&apos;$;EC_DAT_FILE$;&apos;</value>
	    </param>
	    <param>
		<key>--hypo</key>
		<value>&apos;$;HYPOTHETICAL$;&apos;</value>
	    </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>map headers to tab</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/map_header_to_transcript_in_tab</executable>
            <param>
                <key>--pseudomolecule_list</key>
                <value>$;PSEUDOMOLECULE_FILE$;</value>
            </param>
            <param>
                <key>--output_file</key>
                <value>$;OUTPUT_DIRECTORY$;/$;OUTPUT_FILE_BASE_NAME$;.final.tab</value>
            </param>
            <param>
                <key>--feature_relationship_file</key>
                <value>$;FEATURE_RELATIONSHIP_FILE$;</value>
            </param>
            <param>
                <key>--tabfile</key>
                <value>$;OUTPUT_DIRECTORY$;/$;OUTPUT_FILE_BASE_NAME$;.processed.tab</value>
            </param>
            <param>
            	<key>--print_mapping</key>
            	<value>$;OUTPUT_DIRECTORY$;/$;OUTPUT_FILE_BASE_NAME$;_relationship.map</value>
            </param>
        </command>          
        <command>
            <type>RunUnixCommand</type>
            <name>annotation to bsml</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/annotation_collection_to_bsml</executable>
            <param>
                <key>--input_file</key>
                <value>$;OUTPUT_DIRECTORY$;/$;OUTPUT_FILE_BASE_NAME$;.processed.tab</value>
            </param>
            <param>
                <key>--output</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>
                <key>--source_bsml_file</key>
                <value>$;SOURCE_BSML_FILE$;</value>
            </param>
            <param>
                <key>--sourcename</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
        </command>    
        <command>
            <type>RunUnixCommand</type>
            <name>create bsml list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>  
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>  
                <key>--regex</key>
                <value>".*\.bsml"</value>
            </param>
            <param>  
                <key>--output_list</key>
                <value>$;BSML_OUTPUT_LIST$;</value>
            </param>
        </command>
        <INCLUDE file="$;DOCS_DIR$;/file_iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR1,$;ITERATOR_XML$;=ITERATOR1_XML">
    </commandSet>
</commandSetRoot>
