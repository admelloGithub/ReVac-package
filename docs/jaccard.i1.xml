<?xml version="1.0" encoding="UTF-8"?>

<commandSetRoot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation='commandSet.xsd'>
    <commandSet type="serial">
        <name>jaccard compute</name>
	
	 <!--Preprocessing-->
        <command>
            <type>RunUnixCommand</type>
            <name>create output directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;OUTPUT_DIRECTORY$;/$;ITERATOR_NAME$;/g$;GROUP_NUMBER$;</arg>
        </command>
	<!-- end of pre processing -->

        <command>
            <type>RunUnixCommand</type>
            <name>make asmbl lookup</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/bsml2idlookup</executable>
            <param>  
                <key>--bsml_list</key>
                <value>$;I_GENOME_LIST_FILE$;</value>
            </param>
            <param>  
                <key>--output</key>
                <value>$;OUTPUT_DIRECTORY$;/$;ITERATOR_NAME$;/g$;GROUP_NUMBER$;/$;I_GENOME$;.asmbl.lookup</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>generate clusters</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/clusterBsmlPairwiseAlignments</executable>
            <param>  
                <key>--bsmlSearchList</key>
                <value>$;MATCH_BSML_FILE_LIST$;</value>
            </param>
            <param>  
                <key>--asmbl_lookup</key>
                <value>$;OUTPUT_DIRECTORY$;/$;ITERATOR_NAME$;/g$;GROUP_NUMBER$;/$;I_GENOME$;.asmbl.lookup</value>
            </param>
            <param>  
                <key>--log</key>
                <value>$;OUTPUT_DIRECTORY$;/$;ITERATOR_NAME$;/g$;GROUP_NUMBER$;/$;I_GENOME$;.cluster.log</value>
            </param>
            <param>  
                <key>--linkscore</key>
                <value>$;LINKSCORE$;</value>
            </param>
            <param>  
                <key>--percent_identity</key>
                <value>$;PIDENTITY_CUTOFF$;</value>
            </param>
            <param>
                <key>--percent_similarity</key>
                <value>$;PSIMILARITY_CUTOFF$;</value>
            </param>
            <param>  
                <key>--percent_coverage</key>
                <value>$;PCOVERAGE_CUTOFF$;</value>
            </param>
            <param>  
                <key>--p_value</key>
                <value>$;PVALCUT$;</value>
            </param>
            <param>  
                <key>--outfile</key>
                <value>$;OUTPUT_DIRECTORY$;/$;ITERATOR_NAME$;/g$;GROUP_NUMBER$;/$;I_GENOME$;.jkcluster.out</value>
            </param>
            <param>
                <key>--cluster_path</key>
                <value>$;CLUSTER_PATH$;</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>jaccard2fasta</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/CogProteinFasta</executable>
            <param>  
                <key>--cogFile</key>
                <value>$;OUTPUT_DIRECTORY$;/$;ITERATOR_NAME$;/g$;GROUP_NUMBER$;/$;I_GENOME$;.jkcluster.out</value>
            </param>
            <param>  
                <key>--bsmlModelList</key>
                <value>$;I_GENOME_LIST_FILE$;</value>
            </param>
            <param>  
                <key>--outputDir</key>
                <value>$;OUTPUT_DIRECTORY$;/$;ITERATOR_NAME$;/g$;GROUP_NUMBER$;/$;I_GENOME$;</value>
            </param>
            <param>  
                <key>--maxCogSeqCount</key>
                <value>$;MAX_MULTI_ALIGNMENT$;</value>
            </param>
            <param>  
                <key>--use_feature_ids_in_fasta</key>
                <value>'$;USE_FEATURE_IDS_IN_FASTA$;'</value>
            </param>
            <param>  
                <key>--outputToken</key>
                <value>$;GROUP_NUMBER$;</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create fasta list</name>
            <state>incomplete</state>
            <executable>find</executable>
            <arg>$;OUTPUT_DIRECTORY$;/$;ITERATOR_NAME$;/g$;GROUP_NUMBER$;/$;I_GENOME$; -name '*.fsa'</arg>
            <param>  
                <key>stdout</key>
                <value>$;OUTPUT_DIRECTORY$;/$;ITERATOR_NAME$;/g$;GROUP_NUMBER$;/$;I_GENOME$;.$;COMPONENT_NAME$;.fsa.list</value>
            </param>
        </command>
    </commandSet>
</commandSetRoot>
