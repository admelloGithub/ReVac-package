<?xml version="1.0" encoding="UTF-8"?>

<commandSetRoot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation='commandSet.xsd'>
    <commandSet type="serial">
	<state>incomplete</state>
	<name>bsml2chado workflow</name>
	<!--Preprocessing-->
	<command>
	    <type>RunUnixCommand</type>
	    <name>create output directory</name>
	    <state>incomplete</state>
	    <executable>mkdir</executable>
	    <arg>-p -m 777 $;OUTPUT_DIRECTORY$;</arg>
	</command>
	<command>
	    <type>RunUnixCommand</type>
	    <name>create temp directory</name>
	    <state>incomplete</state>
	    <executable>mkdir</executable>
	    <arg>-p -m 777 $;TMP_DIR$;</arg>
	</command>
	<command>
	    <type>RunUnixCommand</type>
	    <name>create cache directory</name>
	    <state>incomplete</state>
	    <executable>mkdir</executable>
	    <arg>-p -m 777 $;TMP_DIR$;/cache_dir</arg>
	</command>
    <command>
        <type>RunUnixCommand</type>
        <name>create parse temp directory</name>
        <state>incomplete</state>
        <executable>mkdir</executable>
        <arg>-p -m 777 $;TMP_DIR$;/parse</arg>
    </command>
	<command>
	    <type>RunUnixCommand</type>
	    <name>Cache primary keys</name>
        <state>incomplete</state>
	    <executable>$;BIN_DIR$;/queries2Chado</executable>
	    <param>
		<key>--database</key>
		<value>$;DATABASE$;</value>
	    </param>
	    <param>
		<key>--database_type</key>
		<value>$;RDBMS$;</value>
	    </param>
	    <param>	  
		<key>--server</key>
		<value>$;SERVER$;</value>
	    </param>
	    <param>
		<key>--username</key>
		<value>$;USERNAME$;</value>
	    </param>
	    <param>
		<key>--password</key>
		<value>$;PASSWORD$;</value>
	    </param>
	    <param>
	  	<key>--password_file</key>
	  	<value>$;PASSWORD_FILE$;</value>
	    </param>	    
	    <param>
		<key>--debug_level</key>
		<value>$;DEBUG$;</value>
	    </param>
	    <param>
		<key>--update</key>
		<value>$;UPDATE$;</value>
	    </param>
	    <param>
		<key>--type</key>
		<value>$;SEQUENCE_TYPE$;</value>
	    </param>
	    <param>
		<key>--log4perl</key>
		<value>$;WORKFLOW_REPOSITORY$;/queries2Chado.pl.log</value>
	    </param>
	    <param>
		<key>--cache_dir</key>
		<value>$;TMP_DIR$;/cache_dir</value>
	    </param>
	    <param>
		<key>stdout</key>
		<value>$;WORKFLOW_REPOSITORY$;/queries2Chado.stdout</value>
	    </param>
	    <param>
		<key>stderr</key>
		<value>$;WORKFLOW_REPOSITORY$;/queries2Chado.stderr</value>
	    </param>
	</command>
	<!--Processing-->
	<!--Iterator-->
    <command>
      <type>RunUnixCommand</type>
      <name>create_file_iterator_list</name>
      <state>incomplete</state>
      <executable>$;BIN_DIR$;/create_file_iterator_list</executable>
      <param>
        <key>--input_file_list</key>
        <value>$;INPUT_FILE_LIST$;</value>
      </param>
      <param>
        <key>--input_file</key>
        <value>$;INPUT_FILE$;</value>
      </param>
      <param>
        <key>--input_directory</key>
        <value>$;INPUT_DIRECTORY$;</value>
      </param>
      <param>
        <key>--input_directory_extension</key>
        <value>$;INPUT_EXTENSION$;</value>
      </param>
      <param>
        <key>--output_iter_list</key>
        <value>$;WORKFLOW_REPOSITORY$;/$;ITERATOR1$;.list</value>
      </param>
      <param>
        <key>--checksum_filenames</key>
        <value>$;CHECKSUM_FILENAMES$;</value>
      </param>
      <param>
      	<key>--timestamp</key>
        <value>1</value>
      </param>
    </command>
    <INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR1,$;ITERATOR_XML$;=ITERATOR1_XML,$;ITERATOR_LIST$;=$;WORKFLOW_REPOSITORY$;/$;ITERATOR1$;.list,$;ITERATOR_TIMESTAMP$;=1"/>

	<command>
	    <type>RunUnixCommand</type>
	    <name>list bcp files</name>
	    <state>incomplete</state>
	    <executable>/usr/bin/find</executable>
	    <arg>$;TMP_DIR$;/parse -name "*.out" -type f -noleaf</arg>
	    <param>
		<key>
		    stdout
		</key>
		<value>
		    $;TMP_DIR$;/tables.out
		</value>
	    </param>
	</command>
	<command>
	    <type>RunUnixCommand</type>
	    <name>trim dups files</name>
	    <state>incomplete</state>
	    <executable>cat</executable>
	    <arg> $;TMP_DIR$;/tables.out | perl -ne 's/.*\/([\w_]+).out/$1/;print '| sort | uniq</arg>
	    <param>
		    <key>stdout</key>
		    <value>$;TMP_DIR$;/collatetables.list.tmp</value>
        </param>
        <param>
		    <key>stderr</key>
    		<value>$;TMP_DIR$;/collatesort.stderr</value>
	    </param>
	</command>
	<command>
	    <type>RunUnixCommand</type>
	    <name>create tables list</name>
	    <state>incomplete</state>
	    <executable>echo</executable>
	    <arg>-e "\0044;I_TABLE_NAME\0044;" | cat - $;TMP_DIR$;/collatetables.list.tmp</arg>
	    <param>
		<key>
		    stdout
		</key>
		<value>
		    $;TMP_DIR$;/collatetables.list
		</value>
	    </param>
	</command>
	<!--Iterator-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR2,$;ITERATOR_XML$;=ITERATOR2_XML,$;ITERATOR_LIST$;=$;TMP_DIR$;/collatetables.list,$;NODISTRIB$;=0,$;GROUP_COUNT$;=50"/> 
	<command>
	    <type>RunDistributedCommand</type>
	    <name>extract checksums</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/extract_checksums</executable>
	    <param>
		<key>--bcp_dir</key>
		<value>$;TMP_DIR$;/</value>
	    </param>
	    <param>
		<key>--bcp_extension</key>
		<value>bcp.out</value>
	    </param>
	    <param>
		<key>--database_type</key>
		<value>$;RDBMS$;</value>
	    </param>
	    <param>
		<key>--output_file</key>
		<value>$;TMP_DIR$;/checksums.out</value>
	    </param>
	    <param>
		<key>stdout</key>
		<value>$;WORKFLOW_REPOSITORY$;/extract_checksums.stdout</value>
	    </param>
	    <param>
		<key>stderr</key>
		<value>$;WORKFLOW_REPOSITORY$;/extract_checksums.stderr</value>
	    </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>mkdir splitchecksums</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;TMP_DIR$;/splitchecksums</arg>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>split</name>
            <state>incomplete</state>
            <executable>split</executable>
            <arg> -d -l $;SORT_CHUNK_SIZE$; $;TMP_DIR$;/checksums.out  $;TMP_DIR$;/splitchecksums/checksums.out.split.</arg>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create file list of spit checkums.out</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>  
                <key>--directory</key>
                <value>$;TMP_DIR$;/splitchecksums</value>
            </param>
            <param>  
                <key>--regex</key>
                <value>".*\.split\..*"</value>
            </param>
            <param>  
                <key>--output_list</key>
                <value>$;TMP_DIR$;/splitchecksumsoutfiles.list</value>
            </param>
        </command> 
        <command>
         <type>RunUnixCommand</type>
         <name>create_file_iterator_list</name>
         <state>incomplete</state>
         <executable>$;BIN_DIR$;/create_file_iterator_list</executable>
         <param>
             <key>--checksum_filenames</key>
             <value>$;CHECKSUM_FILENAMES$;</value>
         </param>
         <param>
	  <key>--input_file_list</key>
	  <value>$;TMP_DIR$;/splitchecksumsoutfiles.list</value>
         </param>
         <param>
	  <key>--output_iter_list</key>
	  <value>$;WORKFLOW_REPOSITORY$;/$;ITERATOR8$;.list</value>
         </param>
        </command>
        <INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR8,$;ITERATOR_XML$;=ITERATOR8_XML,$;ITERATOR_LIST$;=$;WORKFLOW_REPOSITORY$;/$;ITERATOR8$;.list,$;NODISTRIB$;=0,$;GROUP_COUNT$;=50"/>
        <command>
            <type>RunUnixCommand</type>
            <name>create sorted files list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>  
                <key>--directory</key>
                <value>$;TMP_DIR$;/$;ITERATOR8$;/</value>
            </param>
            <param>  
                <key>--regex</key>
                <value>".*\.sorted"</value>
            </param>
            <param>  
                <key>--output_list</key>
                <value>$;TMP_DIR$;/sortedfiles.list</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>merge sorted split checksum files</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/merge_sorted_files</executable>
            <arg> $;TMP_DIR$;/sortedfiles.list $;TMP_DIR$;/checksums.out.sorted -k1,1 -k2,2n -T $;TMP_DIR$;</arg>
        </command>
	<command>
	    <type>RunDistributedCommand</type>
	    <name>assign primary keys</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/assign_pks</executable>
	    <param>
		<key>--database</key>
		<value>$;DATABASE$;</value>
	    </param>
	    <param>
		<key>--database_type</key>
		<value>$;RDBMS$;</value>
	    </param>
	    <param>	  
		<key>--server</key>
		<value>$;SERVER$;</value>
	    </param>
	    <param>
		<key>--username</key>
		<value>$;USERNAME$;</value>
	    </param>
	    <param>
		<key>--password</key>
		<value>$;PASSWORD$;</value>
	    </param>
	    <param>
	  	<key>--password_file</key>
	  	<value>$;PASSWORD_FILE$;</value>
	    </param>		    
	    <param>
		<key>--debug</key>
		<value>$;DEBUG$;</value>
	    </param>
	    <param>
		<key>--checksum_file</key>
		<value>$;TMP_DIR$;/checksums.out.sorted</value>
	    </param>
	    <param>
		<key>--output_file</key>
		<value>$;TMP_DIR$;/checksums.out.sorted.pks</value>
	    </param>
	</command> 
    <command>
        <type>RunUnixCommand</type>
        <name>create splitoffsets directory</name>
        <state>incomplete</state>
        <executable>mkdir</executable>
        <arg>-p -m 777 $;TMP_DIR$;/splitoffsets</arg>
    </command>
        <command>
            <type>RunDistributedCommand</type>
            <name>split</name>
            <state>incomplete</state>
            <executable>split</executable>
            <arg> -d -l 1000000000 $;TMP_DIR$;/checksums.out.sorted.pks $;TMP_DIR$;/splitoffsets/checksums.out.splitoffsets.</arg>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create file list of spit checkums.out</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>  
                <key>--directory</key>
                <value>$;TMP_DIR$;/splitoffsets</value>
            </param>
            <param>  
                <key>--regex</key>
                <value>".*\.splitoffsets\..*"</value>
            </param>
            <param>  
                <key>--output_list</key>
                <value>$;TMP_DIR$;/splitchecksumsoffsetsoutfiles.list</value>
            </param>
        </command>
        <command>
         <type>RunUnixCommand</type>
         <name>create_file_iterator_list</name>
         <state>incomplete</state>
         <executable>$;BIN_DIR$;/create_file_iterator_list</executable>
         <param>
             <key>--checksum_filenames</key>
             <value>$;CHECKSUM_FILENAMES$;</value>
         </param>
         <param>
             <key>--input_file_list</key>
	         <value>$;TMP_DIR$;/splitchecksumsoffsetsoutfiles.list</value>
         </param>
         <param>
	  <key>--output_iter_list</key>
	  <value>$;WORKFLOW_REPOSITORY$;/$;ITERATOR9$;.list</value>
         </param>
        </command>
        <INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR9,$;ITERATOR_XML$;=ITERATOR9_XML,$;ITERATOR_LIST$;=$;WORKFLOW_REPOSITORY$;/$;ITERATOR9$;.list,$;NODISTRIB$;=0,$;GROUP_COUNT$;=50"/>
       <command>
            <type>RunUnixCommand</type>
            <name>create sorted files list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>  
                <key>--directory</key>
                <value>$;TMP_DIR$;/$;ITERATOR9$;/</value>
            </param>
            <param>  
                <key>--regex</key>
                <value>".*\.sorted"</value>
            </param>
            <param>  
                <key>--output_list</key>
                <value>$;TMP_DIR$;/sortedoffsetsfiles.list</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>merge sorted split checksum files</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/merge_sorted_files</executable>
            <arg> $;TMP_DIR$;/sortedoffsetsfiles.list $;TMP_DIR$;/checksums.out.sorted.pks.offsets -k1,1 -k2,2n -T $;TMP_DIR$;</arg>
        </command>
	<command>
	    <type>RunUnixCommand</type>
	    <name>create output directory</name>
	    <state>incomplete</state>
	    <executable>mkdir</executable>
	    <arg>-p -m 777 $;TMP_DIR$;/final</arg>
	</command>
        <command>
	    <type>RunDistributedCommand</type>
	    <name>replace checksums</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/replace_checksums</executable>
	    <param>
		<key>--bcp_dir</key>
		<value>$;TMP_DIR$;</value>
	    </param>
	    <param>
		<key>--output_dir</key>
		<value>$;TMP_DIR$;/final</value>
	    </param>
	    <param>
		<key>--bcp_extension</key>
		<value>bcp.out</value>
	    </param>
	    <param>
		<key>--checksum_file</key>
		<value>$;TMP_DIR$;/checksums.out.sorted.pks.offsets</value>
	    </param>
	    <param>
		<key>stdout</key>
		<value>$;TMP_DIR$;/replace_checksums.stdout</value>
	    </param>
	    <param>
		<key>stderr</key>
		<value>$;TMP_DIR$;/replace_checksums.stderr</value>
	    </param>
	</command>
	<command>
	    <type>RunUnixCommand</type>
	    <name>Drop chado-mart indices</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/ddl2iterator</executable>
            <param>
		<key>--database_type</key>
		<value>$;RDBMS$;</value>
	    </param>
            <param>
		<key>--infile</key>
		<value>$;DOCS_DIR$;/ddls/$;RDBMS$;/drop_cm_indices.$;RDBMS$;.ddl</value>
	    </param>
	    <param>
		<key>--outfile</key>    
		<value>$;TMP_DIR$;/drop_cm_indices.list</value>
	    </param>
	    <param>
		<key>--logfile</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.drop_cm_indices.log</value>
	    </param>
	    <param>
		<key>stdout</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.drop_cm_indices.stdout</value>
	    </param>
	    <param>
		<key>stderr</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.drop_cm_indices.stderr</value>
	    </param>
	</command>
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR7,$;ITERATOR_XML$;=ITERATOR7_XML,$;ITERATOR_LIST$;=$;TMP_DIR$;/drop_cm_indices.list,$;NODISTRIB$;=1,$;GROUP_COUNT$;=1"/>
	<command>
	    <type>RunUnixCommand</type>
	    <name>Drop indexes</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/ddl2iterator</executable>
            <param>
		<key>--database_type</key>
		<value>$;RDBMS$;</value>
	    </param>
            <param>
		<key>--infile</key>
		<value>$;DOCS_DIR$;/ddls/$;RDBMS$;/drop_indexes.$;RDBMS$;.ddl</value>
	    </param>
	    <param>
		<key>--outfile</key>    
		<value>$;TMP_DIR$;/drop_indexes.list</value>
	    </param>
	    <param>
		<key>--logfile</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.drop_indexes.log</value>
	    </param>
	    <param>
		<key>stdout</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.drop_indexes.stdout</value>
	    </param>
	    <param>
		<key>stderr</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.drop_indexes.stderr</value>
	    </param>
	</command>
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR3,$;ITERATOR_XML$;=ITERATOR3_XML,$;ITERATOR_LIST$;=$;TMP_DIR$;/drop_indexes.list,$;NODISTRIB$;=1,$;GROUP_COUNT$;=1"/>
	<command>
	    <type>RunUnixCommand</type>
	    <name>list bcp files</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/bcpdir2iterator</executable>
	    <param>
		<key>--bcp_directory</key>
		<value>$;TMP_DIR$;/final</value>
	    </param>
	    <param>
		<key>--bcp_extension</key>
		<value>bcp.out</value>
	    </param>
	    <param>
		<key>--output_iterator_list</key>
		<value>$;TMP_DIR$;/bcp.out.list</value>
	    </param>
	</command>
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR4,$;ITERATOR_XML$;=ITERATOR4_XML,$;ITERATOR_LIST$;=$;TMP_DIR$;/bcp.out.list,$;NODISTRIB$;=1,$;GROUP_COUNT$;=50"/>
	<command>
	    <type>RunUnixCommand</type>
	    <name>Rebuild indexes</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/ddl2iterator</executable>
            <param>
		<key>--infile</key>
		<value>$;DOCS_DIR$;/ddls/$;RDBMS$;/create_indexes.$;RDBMS$;.ddl</value>
	    </param>
	    <param>
		<key>--outfile</key>    
		<value>$;TMP_DIR$;/create_indexes.list</value>
	    </param>
	    <param>
		<key>--logfile</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.create_indexes.log</value>
	    </param>
	    <param>
		<key>stdout</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.create_indexes.stdout</value>
	    </param>
	    <param>
		<key>stderr</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.create_indexes.stderr</value>
	    </param>
	</command>
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR5,$;ITERATOR_XML$;=ITERATOR5_XML,$;ITERATOR_LIST$;=$;TMP_DIR$;/create_indexes.list,$;NODISTRIB$;=1,$;GROUP_COUNT$;=1"/>
	<command>
	    <type>RunUnixCommand</type>
	    <name>Restore chado-mart indices</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/ddl2iterator</executable>
            <param>
		<key>--infile</key>
		<value>$;DOCS_DIR$;/ddls/$;RDBMS$;/create_cm_indices.$;RDBMS$;.ddl</value>
	    </param>
	    <param>
		<key>--outfile</key>    
		<value>$;TMP_DIR$;/create_cm_indices.list</value>
	    </param>
	    <param>
		<key>--logfile</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.create_cm_indices.log</value>
	    </param>
        <param>
		<key>--database_type</key>    
		<value>$;RDBMS$;</value>
	    </param>
	    <param>
		<key>stdout</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.create_cm_indices.stdout</value>
	    </param>
	    <param>
		<key>stderr</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.create_cm_indices.stderr</value>
	    </param>
	</command>
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR6,$;ITERATOR_XML$;=ITERATOR6_XML,$;ITERATOR_LIST$;=$;TMP_DIR$;/create_cm_indices.list,$;NODISTRIB$;=1,$;GROUP_COUNT$;=1"/>
	<command>
	    <type>RunUnixCommand</type>
	    <name>List tables</name>
	    <state>incomplete</state>
	    <executable>$;BIN_DIR$;/ddl2iterator</executable>
            <param>
		<key>--infile</key>
		<value>$;DOCS_DIR$;/ddls/$;RDBMS$;/analyze_tables.$;RDBMS$;.ddl</value>
	    </param>
	    <param>
		<key>--outfile</key>    
		<value>$;TMP_DIR$;/analyze_table.list</value>
	    </param>
	    <param>
		<key>--logfile</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.analyze_table.log</value>
	    </param>
        <param>
		<key>--database_type</key>    
		<value>$;RDBMS$;</value>
	    </param>
	    <param>
		<key>stdout</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.analyze_table.stdout</value>
	    </param>
	    <param>
		<key>stderr</key>    
		<value>$;TMP_DIR$;/ddl2iterator.pl.analyze_table.stderr</value>
	    </param>
	</command>	
	<!--Iterator analyze_tables-->
	<INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR10,$;ITERATOR_XML$;=ITERATOR10_XML,$;ITERATOR_LIST$;=$;TMP_DIR$;/analyze_table.list,$;NODISTRIB$;=0,$;GROUP_COUNT$;=1"/> 
    </commandSet>
</commandSetRoot>
