<?xml version="1.0" encoding="UTF-8"?>

<commandSetRoot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation='commandSet.xsd'>
    <commandSet type="serial">
        <!--Pre-Processing-->
        <name>mothur screen seqs</name>
        <command>
            <type>RunUnixCommand</type>
            <name>create output directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;OUTPUT_DIRECTORY$;</arg>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create temp directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;TMP_DIR$;</arg>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create screen.seqs iterator list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_mothur_screen_seqs_iterator_list</executable>
            <arg>--align_file=$;INPUT_FILE$; --alignment_file_list=$;INPUT_FILE_LIST$; --names_file_list=$;NAMES_LIST$; --groups_file_list=$;GROUPS_LIST$; --align_report_file_list=$;ALIGN_REPORT_LIST$; --output=$;TMP_DIR$;/screen_seqs_iterator.list --log=$;TMP_DIR$;/create_mothur_screen_seqs_iterator_list.log --debug=4</arg>
        </command>
        <!--Processing-->
        <!--Iterator-->
        <INCLUDE file="$;DOCS_DIR$;/iterator_template.xml" keys="$;ITERATOR_NAME$;=ITERATOR1,$;ITERATOR_XML$;=ITERATOR1_XML,$;ITERATOR_LIST$;=$;TMP_DIR$;/screen_seqs_iterator.list" />
        <!--Post-Processing-->    
        <command>
            <type>RunUnixCommand</type>
            <name>create good align file list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>
                <key>--regex</key>
                <value>".*\.good.align"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;GOOD_ALIGN_OUTPUT_LIST$;</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create bad align file list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>
                <key>--regex</key>
                <value>".*\.bad.align"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;BAD_ALIGN_OUTPUT_LIST$;</value>
            </param>
        </command>                
        <command>
            <type>RunUnixCommand</type>
            <name>create good groups file list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>
                <key>--regex</key>
                <value>".*\.good.groups"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;GOOD_GROUPS_OUTPUT_LIST$;</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create bad groups file list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>
                <key>--regex</key>
                <value>".*\.bad.groups"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;BAD_GROUPS_OUTPUT_LIST$;</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create good names file list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>
                <key>--regex</key>
                <value>".*\.good.names"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;GOOD_NAMES_OUTPUT_LIST$;</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create bad names file list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>
                <key>--regex</key>
                <value>".*\.bad.names"</value>
            </param>
            <param>
                <key>--output_list</key>
                <value>$;BAD_NAMES_OUTPUT_LIST$;</value>
            </param>
        </command>
    </commandSet>
</commandSetRoot>    
