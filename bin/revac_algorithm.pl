#!/usr/bin/perl -w
use strict;
use List::MoreUtils qw(uniq);

my @GO_ids = qw
#my @GO_ids = qw
my @GO_fat = qw
#my @GO_fat = qw


my @att_kywds = qw(extracellular_solute-binding Periplasmic_solute_binding sulfate_ABC_transporter);

my $surface_table = $ARGV[0];
my (%seqs,%score,%seq_length);

open (my $fh, "<", $surface_table) || die "$!\n";

my @headers = split(/\t/,<$fh>);
shift @headers;
my @lines = <$fh>;

close $fh || die "$!\n";

my @loci;
my $cogs=0;

foreach my $line (@lines) {
	#$line =~ s/\n$//;
	my @split = split(/\t/,$line);
		for (my $i=0; $i<scalar(@headers); $i++) {
			$seqs{$split[0]}{$headers[$i]} = $split[$i+1];
			my $lt = $split[0];
			$lt =~ s/_.*$//;
			push(@loci,$lt);						###Storing all genomes from summary table
			if ($headers[$i] =~ /Length/) {
				$seq_length{$split[0]}{Length} = $split[$i+1];
			}#print "$split[0]\t$headers[$i]\t$split[$i+1]\n";
			if ($headers[$i] =~ /Jaccard_clusters/ || $headers[$i] =~ /PanOCT/ || $headers[$i] =~ /Orthomcl/ || $headers[$i] =~ /LSBSR/) {
				$cogs = 1;
			}
		}
}

my @genomes = uniq(@loci);
#my $no_of_genomes = scalar(@genomes);
my $no_of_genomes = $ARGV[2];
print STDERR "No of genomes = $no_of_genomes ;$ARGV[1];\n";

foreach my $id (keys %seqs) {
	if ($seqs{$id}{Length} =~ /None/ || $seqs{$id}{Length} =~ /Length/) {
		delete $seqs{$id};					##Removes gene locus tags which don't have protein sequences.
	}
}


foreach my $id (keys %seqs) {

	my $trifecta = 0;
	my $orthologs = 0;
	my $cog_score = 0;
	my $psorthead = "PSORTB"; ##To check for Psort prediction before scoring for TMHMM
	my $no_surface = 0;

	foreach my $head (keys %{$seqs{$id}}) {
		
		if ($head eq "PSORTB") {
			$psorthead = $head;
			$seqs{$id}{$psorthead} = "$seqs{$id}{$head}";
			if ($seqs{$id}{$head} =~ /OuterMembrane/||$seqs{$id}{$head} =~ /Extracelluar/||$seqs{$id}{$head} =~ /Cellwall/) {
				$score{$id}{plus} += 1;
				$trifecta += 1;
				next;
			} elsif ($seqs{$id}{$head} =~ /CytoplasmicMembrane/ && $seqs{$id}{$head} !~ /,/) {
				$score{$id}{minus} -= 1;
			} elsif ($seqs{$id}{$head} =~ /Cytoplasmic/ && $seqs{$id}{$head} !~ /,/) {
				$score{$id}{minus} -= 1;
			} elsif ($seqs{$id}{$head} =~ /CytoplasmicMembrane/ && $seqs{$id}{$head} =~ /Cytoplasmic/ && $seqs{$id}{$head} =~ /,/) {
                $score{$id}{minus} -= 1;
			} elsif ($seqs{$id}{$head} =~ /None/) {
				$no_surface += 1;
			}
		} elsif ($head eq "LipoP") {
			 if ($seqs{$id}{$head} =~ /SpI/||$seqs{$id}{$head} =~ /SpII/||$seqs{$id}{$head} =~ /THM/) {
				$score{$id}{plus} += 1;
				$trifecta += 1;
				#my @split = split(/\|/,$seqs{$id}{$head});
				#	if ($split[1] >= 20) {			###Boost for higher score
				#		$score{$id}{plus} += 0.1;
				#	}
			} elsif ($seqs{$id}{$head} =~ /None/||$seqs{$id}{$head} =~ /CYT/) {
                $no_surface += 1;
            }
		} elsif ($head eq "TMHMM") {
			if ($seqs{$id}{$head} !~ /None/) {
				#$score{$id}{plus} += 1;
				#if (!($seqs{$id}{$psorthead})) {die "$id\t$psorthead\n"; }
					if ($seqs{$id}{$psorthead} =~ /OuterMembrane/||$seqs{$id}{$psorthead} =~ /Extracelluar/||$seqs{$id}{$psorthead} =~ /Cellwall/ && $seqs{$id}{$head} < 2) { 
						$score{$id}{plus} += 0.5; 
					}	##2 TMHs is neutral and not scored.
					elsif ($seqs{$id}{$psorthead} =~ /OuterMembrane/||$seqs{$id}{$psorthead} =~ /Extracelluar/||$seqs{$id}{$psorthead} =~ /Cellwall/ && $seqs{$id}{$head} < 4 && $seqs{$id}{$head} > 2) { 
						$score{$id}{minus} -= 0.2; 
					}
					elsif ($seqs{$id}{$head} >= 4) { $score{$id}{minus} -= 2; }
					elsif ($seqs{$id}{$psorthead} =~ /Cytoplasmic/ && $seqs{$id}{$psorthead} !~ /,/) { $score{$id}{minus} -= 2; }	##Checks if only cytoplasmics, not others.
			} elsif ($seqs{$id}{$head} =~ /None/) {
                $no_surface += 1;
            }
		} elsif ($head eq "SignalP") {
			if ($seqs{$id}{$head} !~ /None/) {
				$score{$id}{plus} += 1;
				$trifecta += 1;
			} elsif ($seqs{$id}{$head} =~ /None/) {
                $no_surface += 1;
            }
		} elsif	($head eq "SPAAN") {
			if ($seqs{$id}{$head} !~ /None/) {
				$score{$id}{plus} += 0.5;
			} elsif ($seqs{$id}{$head} =~ /None/) {
                $no_surface += 1;
            }
		} elsif ($head eq "HMM") { 
			if ($seqs{$id}{$head} !~ /None/) {
                $score{$id}{plus} += 0.5;
            }
		} elsif ($head eq "Antigenicity") {
			if ($seqs{$id}{$head} !~ /None/) {
				$score{$id}{plus} += 0.5;
				my @split = split(/\|/,$seqs{$id}{$head});
				$split[2] =~ s/[0-9]+\(//;
				$split[2] =~ s/\)//;
				$score{$id}{plus} += ($split[2]/$seq_length{$id}{Length});
				$seqs{$id}{$head} .= "|".sprintf("%.2f",($split[2]/$seq_length{$id}{Length})*100);
					#if ($split[2] >= 10) { $score{$id}{plus} += ($split[2]/100); }
					#elsif ($split[2] >= 20) { $score{$id}{plus} += ($split[2]/100); }
			}
		} elsif ($head eq "Bcell_pred") {
			if ($seqs{$id}{$head} !~ /None/) {
				my @split = split(/\|/,$seqs{$id}{$head});
				$split[0] =~ s/^[ ]{0,}[0-9]+\(//;
				$split[0] =~ s/\)$//;
				$score{$id}{plus} += ($split[0]/$seq_length{$id}{Length});
				$score{$id}{plus} += ($split[1]/($seq_length{$id}{Length}-7+1));
				$seqs{$id}{$head} .= "|".sprintf("%.2f",($split[0]/$seq_length{$id}{Length})*100);
					#if (($split[1]/($seq_length{$id}{Length}-7+1)) > 0.35) { $score{$id}{plus} += 1; }
					#if ($split[0] == $seq_length{$id}{Length}) {
                    #    $score{$id}{plus} += 1;
                        #$score{$id}{plus} += ($split[1]/1000);
                    #} elsif ($split[0] >= (0.75*$seq_length{$id}{Length})) {
                    #    $score{$id}{plus} += 0.75;
                    #} elsif ($split[0] < (0.75*$seq_length{$id}{Length})) {
                    #    $score{$id}{plus} += 0.5;
                    #}
			}
		} elsif ($head eq "MHC_I") {
			if ($seqs{$id}{$head} !~ /None/) {
				my @split = split(/\|/,$seqs{$id}{$head});
				$split[0] =~ s/^[ ]{0,}[0-9]+\(//;
				$split[0] =~ s/\)$//;
				if (($split[0]/$seq_length{$id}{Length})>0.80 && ($split[0]/$seq_length{$id}{Length})<0.90) { $score{$id}{plus} += ($split[0]/$seq_length{$id}{Length}) }
				elsif (($split[0]/$seq_length{$id}{Length})>=0.90) { $score{$id}{plus} +=1; }
                $score{$id}{plus} += ($split[1]/($seq_length{$id}{Length}-9+1));
				$seqs{$id}{$head} .= "|".sprintf("%.2f",($split[0]/$seq_length{$id}{Length})*100);
				#if (($split[1]/($seq_length{$id}{Length}-9+1)) > 0.35) { $score{$id}{plus} += 1; }
				#	if ($split[0] == $seq_length{$id}{Length}) { 
				#		$score{$id}{plus} += 1; 
						#$score{$id}{plus} += ($split[1]/1000);
				#	} elsif ($split[0] >= (0.75*$seq_length{$id}{Length})) {
				#		$score{$id}{plus} += 0.75;
				#	} elsif ($split[0] < (0.75*$seq_length{$id}{Length})) {
				#		$score{$id}{plus} += 0.5;
				#	}
			}
		} elsif ($head eq "Netctlpan") {
            if ($seqs{$id}{$head} !~ /None/) {
               my @split = split(/\|/,$seqs{$id}{$head});
               $split[0] =~ s/^[ ]{0,}[0-9]+\(//;
               $split[0] =~ s/\)$//;
				if (($split[0]/$seq_length{$id}{Length})>0.80 && ($split[0]/$seq_length{$id}{Length})<0.90) { $score{$id}{plus} += ($split[0]/$seq_length{$id}{Length}) }
               if (($split[0]/$seq_length{$id}{Length})>=0.90) { $score{$id}{plus} +=1; }
                $score{$id}{plus} += ($split[1]/($seq_length{$id}{Length}-9+1));
                $seqs{$id}{$head} .= "|".sprintf("%.2f",($split[0]/$seq_length{$id}{Length})*100);
                #if (($split[1]/($seq_length{$id}{Length}-9+1)) > 0.35) { $score{$id}{plus} += 1; }
               #   if ($split[0] == $seq_length{$id}{Length}) { 
               #       $score{$id}{plus} += 1; 
                       #$score{$id}{plus} += ($split[1]/1000);
               #   } elsif ($split[0] >= (0.75*$seq_length{$id}{Length})) {
               #       $score{$id}{plus} += 0.75;
               #   } elsif ($split[0] < (0.75*$seq_length{$id}{Length})) {
               #       $score{$id}{plus} += 0.5;
               #   }
            }
		} elsif ($head eq "Immunogenicity") {
			if ($seqs{$id}{$head} !~ /None/) {
				my @split = split(/\|/,$seqs{$id}{$head});
				$split[0] =~ s/^[ ]{0,}[0-9]+\(//;
				$split[0] =~ s/\)$//;
				$score{$id}{plus} += ($split[0]/$seq_length{$id}{Length});
				if (($split[0]/$seq_length{$id}{Length})>=0.1) { $score{$id}{plus} +=1; }
				$score{$id}{plus} += ($split[1]/($seq_length{$id}{Length}-9+1));
				$seqs{$id}{$head} .= "|".sprintf("%.2f",($split[0]/$seq_length{$id}{Length})*100);
					#if ($split[0] < 10) { $score{$id}{plus} += 0.5; }
					#elsif ($split[0] >= 10 && $split[0] <=20) { $score{$id}{plus} += 1; }
					#elsif ($split[0] >= 20 && $split[0] <=30) { $score{$id}{plus} += 1.5; }
					#elsif ($split[0] >= 30) { $score{$id}{plus} += 2; }
			}
		} elsif ($head eq "MHC_II") {
            if ($seqs{$id}{$head} !~ /None/) {
                my @split = split(/\|/,$seqs{$id}{$head});
                $split[0] =~ s/^[ ]{0,}[0-9]+\(//;
                $split[0] =~ s/\)$//;
				if (($split[0]/$seq_length{$id}{Length})>0.80 && ($split[0]/$seq_length{$id}{Length})<0.90) { $score{$id}{plus} += ($split[0]/$seq_length{$id}{Length}) }
				if (($split[0]/$seq_length{$id}{Length})>=0.90) { $score{$id}{plus} +=1; }
                $score{$id}{plus} += ($split[1]/($seq_length{$id}{Length}-15+1));
				$seqs{$id}{$head} .= "|".sprintf("%.2f",($split[0]/$seq_length{$id}{Length})*100);
				#if (($split[1]/($seq_length{$id}{Length}-15+1)) > 0.80) { $score{$id}{plus} += 1; }
                    #if ($split[0] == $seq_length{$id}{Length}) { 
                    #    $score{$id}{plus} += 1; 
                        #$score{$id}{plus} += ($split[1]/1000);
                    #} elsif ($split[0] >= (0.75*$seq_length{$id}{Length})) {
                    #    $score{$id}{plus} += 0.75;
                    #} elsif ($split[0] < (0.75*$seq_length{$id}{Length})) {
                    #    $score{$id}{plus} += 0.5;
                    #}
            }
		} elsif ($head eq "Autoimmunity") {
			if ($seqs{$id}{$head} =~ /None/) {
				$score{$id}{plus} += 1;
			} else {
				my $var = $seqs{$id}{$head};
				$var =~ s/^[ ]{0,}[0-9]+\(//;
				$var =~ s/\)$//;
				$score{$id}{minus} -= ($var/$seq_length{$id}{Length})*2;
				if (($var/$seq_length{$id}{Length})*100 > 20) { $score{$id}{minus} -= 2; }
				$seqs{$id}{$head} .= "|".sprintf("%.2f",($var/$seq_length{$id}{Length})*100);
			}
			#elsif ($seqs{$id}{$head} > 5 && $seqs{$id}{$head} <=10) {
			#	$score{$id}{minus} -= 0.25;
			#} elsif ($seqs{$id}{$head} > 10 && $seqs{$id}{$head} <=20) {
			#	$score{$id}{minus} -= 0.5;
			#} elsif ($seqs{$id}{$head} > 20 && $seqs{$id}{$head} <=30) {
			#	$score{$id}{minus} -= 1;
			#} elsif ($seqs{$id}{$head} > 30) {
			#	$score{$id}{minus} -= 2;
			#}
        } elsif ($head eq "Autoimmunity_commensals") {
            if ($seqs{$id}{$head} =~ /None/) {
                $score{$id}{plus} += 1;
            } elsif ($seqs{$id}{$head} !~ /None/ && $ARGV[1] eq 'no') {
                #print STDERR "Looking at autoimmunity commensals\n";
				my $var = $seqs{$id}{$head};
                $var =~ s/^[ ]{0,}[0-9]+\(//;
                $var =~ s/\)$//;
                $score{$id}{minus} -= ($var/$seq_length{$id}{Length})*2;
                if (($var/$seq_length{$id}{Length})*100 > 20) { $score{$id}{minus} -= 2; }
                $seqs{$id}{$head} .= "|".sprintf("%.2f",($var/$seq_length{$id}{Length})*100);
			} elsif ($ARGV[1] eq 'yes') {
				#print STDERR "Skipping autoimmunity commensals\n";
            }
		} elsif ($head eq "Phobos") {
			if ($seqs{$id}{$head} =~ /None/) {
				$score{$id}{plus} += 0.5;
			} else {
				my @split = split(/\//,$seqs{$id}{$head});
					if ($split[1] <= 2) { $score{$id}{minus} -= 0.25; }
					elsif ($split[1] > 2 && $split[1] <=3) { $score{$id}{minus} -= 0.5; }
					elsif ($split[1] > 3) { $score{$id}{minus} -= 1; }
			}
		}elsif ($head eq "SSR_Finder") {
            if ($seqs{$id}{$head} =~ /None/) {
                $score{$id}{plus} += 1;
            } else {
                my @split = split(/\/\//,$seqs{$id}{$head});
					$score{$id}{minus} -= 0.5*(scalar(@split)); 	#Presence of each repeat
					foreach(@split) {
						my $repeat = $_;
						$repeat =~ s/\///g;
						if ($repeat =~ /promot/) { $score{$id}{minus} -= 0.25; }	##If in promoter region
						my @rep = split(/\|/,$_);
						my ($motif,$cp) = split(/\(/,$rep[2]);
						$cp =~ s/[\)\/]+//;
						if (length($motif) % 3 != 0) { $score{$id}{minus} -= 0.5; } ##Potential to cause frame shifts
						$score{$id}{minus} -= (length($motif)*$cp)*0.01;
					}
            }
		} elsif ($head eq "SSR_protein") {
			if ($seqs{$id}{$head} !~ /None/) {
				my @split = split(/\|\|/,$seqs{$id}{$head});
				my $ding = 0.2*(scalar(@split));
				if ($ding > 1) {
					$score{$id}{minus} -= 1;
				} else {
					$score{$id}{minus} -= 0.2*(scalar(@split));    #Presence of each repeat
				}
			}
		}	elsif ($head eq "SSR_genes") {
            if ($seqs{$id}{$head} !~ /None/) {
                my @split = split(/\|\|/,$seqs{$id}{$head});
                my $ding = 0.2*(scalar(@split));
                if ($ding > 1) {
                    $score{$id}{minus} -= 1;
                } else {
                    $score{$id}{minus} -= 0.2*(scalar(@split));    #Presence of each repeat
                }
            }
		} elsif ($head eq "Repeatmasker") {
			if ($seqs{$id}{$head} =~ /None/) {
				$score{$id}{plus} += 1;
			} else {
				my @split = split(/\|/,$seqs{$id}{$head});
					if (scalar(@split) == 1) { $score{$id}{minus} -= 1; }
					if (scalar(@split) > 1) { $score{$id}{minus} -= 1.5; }
			}
		} elsif ($head eq "BLAT") {
			if ($seqs{$id}{$head} !~ /None/) {
				my $var = $seqs{$id}{$head};
                $var =~ s/^[0-9]+\(//;
                $var =~ s/\)$//;
				$score{$id}{plus} += ($var/$seq_length{$id}{Length});
				if (($var/$seq_length{$id}{Length})*100 > 70) { $score{$id}{plus} += 1; }
				$seqs{$id}{$head} .= "|".sprintf("%.2f",($var/$seq_length{$id}{Length})*100);
				$trifecta += 1;
			}		
		} elsif ($head eq "Homopolymers") {
			if ($seqs{$id}{$head} !~ /None/) {
				my @split = split(/\|/, $seqs{$id}{$head});
				@split = grep { defined $_ } @split;
				$score{$id}{minus} -= scalar(@split)*0.5;
			}
		} elsif ($head eq "IslandPath") {
            if ($seqs{$id}{$head} =~ /None/) {
                $score{$id}{plus} += 0.5;
            } else {
				$score{$id}{minus} -= 1;
			}
		} elsif ($head eq "Jaccard_orthologs") {
			if ($seqs{$id}{$head} !~ /None/) {
				my @split = split(/\|/, $seqs{$id}{$head});
                if (($split[1]/$no_of_genomes) >= 0.90) {
                    $orthologs += 1;
                    $cog_score += 1;
                } elsif (($split[1]/$no_of_genomes) < 0.90) {
                    $score{$id}{minus} -= 0.25;
                }
			} else {
				$orthologs -= 1;
			}
		} elsif ($head eq "PanOCT") {
            if ($seqs{$id}{$head} !~ /None/) {
                my @split = split(/\|/, $seqs{$id}{$head});
                if (($split[1]/$no_of_genomes) >= 0.90) {
					$orthologs += 1;
                    $cog_score += 1;
                } elsif (($split[1]/$no_of_genomes) < 0.90) {
                    $score{$id}{minus} -= 0.25;
                }
			} else {
				$orthologs -= 1;
			}
        } elsif ($head eq "Orthomcl") {
        	if ($seqs{$id}{$head} !~ /None/) {
                my @split = split(/\|/, $seqs{$id}{$head});
				if (($split[1]/$no_of_genomes) >= 0.90) {
					$orthologs += 1;
					$cog_score += 1;
				} elsif (($split[1]/$no_of_genomes) < 0.90) {
                    $score{$id}{minus} -= 0.25;
                }
        	} else {
				$orthologs -= 1;
			}
		} elsif ($head eq "LSBSR") {
            if ($seqs{$id}{$head} !~ /None/) {		
				if (($seqs{$id}{$head}/$no_of_genomes) >= 0.90) {
					$orthologs += 1;
					$cog_score += 1;
				} elsif (($seqs{$id}{$head}/$no_of_genomes) < 0.90) {
					$score{$id}{minus} -= 0.25;
				}
			} else {
				$orthologs -= 1;
			}
		} elsif ($head eq "Attributor") {
            if ($seqs{$id}{$head} !~ /None/) {
                my $ct =0;
				foreach (@GO_ids) {
					if ($seqs{$id}{$head} =~ /$_/) {
					$score{$id}{plus} += 1;
					#$ct++;
					}
				}
				foreach (@GO_fat) {
					#if ($ct > 0) { next; }
                    if ($seqs{$id}{$head} =~ /$_/) {
                    $score{$id}{minus} -= 1;
                    }
                }
				foreach (@att_kywds) {
                    if ($seqs{$id}{$head} =~ /$_/i && $seqs{$id}{$psorthead} =~ /10\.00\|Periplasmic/) {
                    #$ct++;
					#
					#if ($seqs{$id}{$psorthead} =~ /10\.00\|Periplasmic/) {
					$score{$id}{plus} += 1;
                    }
                }
            }
        }

	}

	if ($trifecta >= 3) { $score{$id}{plus} += 2; }
	if ($no_surface == 5) { $score{$id}{minus} -= 2; }
	if ($orthologs == -1 && $cogs == 1) { $score{$id}{minus} -= 0.5; }		##Checks conservation across different methods
	if ($orthologs == -2 && $cogs == 1) { $score{$id}{minus} -= 0.5; }
	if ($orthologs == -3 && $cogs == 1) { $score{$id}{minus} -= 1; }
	if ($orthologs == -4 && $cogs == 1) { $score{$id}{minus} -= 2; }
	if ($orthologs == 1) { $score{$id}{plus} += 0.1; }
	if ($orthologs == 2) { $score{$id}{plus} += 0.2; }
	if ($orthologs == 3) { $score{$id}{plus} += 0.3; }
	if ($orthologs == 4) { $score{$id}{plus} += 0.4; }
	if ($cog_score > 0) { $score{$id}{plus} += 1;	}

}

print "Seq_id\tRevac_Score\t";
foreach (@headers) {
	if ($_ eq "\n") {next;}
	print "$_\t";
}
print "\n";

foreach my $id (sort keys %score) {
	print "$id\t";
	if (!($score{$id}{plus})) { $score{$id}{plus} = 0; }
    if (!($score{$id}{minus})) { $score{$id}{minus} = "-0.0000"; }
	my $score = ($score{$id}{plus} + $score{$id}{minus});
	#printf("%.3f\t",$score{$id});
	printf("%.3f|",$score);
	printf("%.3f",$score{$id}{plus});
	printf("%.3f\t",$score{$id}{minus});
	#print "$score{$id}{plus}$score{$id}{minus}\t";
		foreach my $head (@headers) {
			if ($head eq "\n") {next;}
			print "$seqs{$id}{$head}\t";
		}
	print "\n";
}

#open (my $fhx, ">", "./panoct_scores.out") ||die "$!\n";
#foreach my $id (sort keys %score) {
#    print $fhx "$id\t";
#	if (!($score{$id}{plus})) { $score{$id}{plus} = 0; }
#	if (!($score{$id}{minus})) { $score{$id}{minus} = 0; }
#    my $score = ($score{$id}{plus} + $score{$id}{minus});
#    #print $fhx("%.3f\t",$score{$id});
#	print $fhx "$seqs{$id}{PanOCT}\t";
#    printf $fhx ("%.3f|",$score);
#	printf $fhx ("%.3f",$score{$id}{plus});
#    printf $fhx ("%.3f\t",$score{$id}{minus});
#    #print $fhx "$score{$id}{plus}$score{$id}{minus}\t";
#        #foreach my $head (@headers) {
#            #print $fhx "$seqs{$id}{PanOCT}\t";
#        #}
#    print $fhx "\n";
#}

################################################################################################
