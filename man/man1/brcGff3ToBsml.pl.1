.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "BRCGFF3TOBSML 1"
.TH BRCGFF3TOBSML 1 "2015-07-29" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
brcGff3ToBsml.pl \- Parse IOWG GFF file and produces BSML document
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\s-1USAGE:\s0  brcGff3ToBsml.pl [\-d debug_level] [\-f fastadir] \-g gff_file [\-h] [\-\-id_generator_mapping_file] [\-\-id_repository] [\-l log4perl] [\-m] [\-\-no_id_generator] [\-\-no_report_stats] [\-o outdir]
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-debug_level,\-d\fR" 8
.IX Item "--debug_level,-d"
.Vb 1
\& Optional: Ergatis::Logger log4perl logging level.  Default is 0
.Ve
.IP "\fB\-\-fastadir,\-f\fR" 8
.IX Item "--fastadir,-f"
.Vb 1
\& Optional: Directory to which multi-fasta file containing all sequences will be written.  Default is current working directory.
.Ve
.IP "\fB\-\-gff_file,\-g\fR" 8
.IX Item "--gff_file,-g"
.Vb 1
\& IOWG GFF3 file to be parsed
.Ve
.IP "\fB\-\-id_generator_mapping_file\fR" 8
.IX Item "--id_generator_mapping_file"
.Vb 1
\& Optional: File from which old-identifier to new-identifier mappings will be read and written to.  The default file will be {$outdir}/brcGff3ToBsml.pl.{$gff_file}.mapping_file.txt
.Ve
.IP "\fB\-\-id_repository\fR" 8
.IX Item "--id_repository"
.Vb 1
\& Optional: IdGenerator compliant directory (must contain valid_id_repository file).  Default is current working directory
.Ve
.IP "\fB\-\-man,\-m\fR" 8
.IX Item "--man,-m"
.Vb 1
\& Display the pod2usage page for this utility
.Ve
.IP "\fB\-\-no_id_generator\fR" 8
.IX Item "--no_id_generator"
.Vb 2
\& Optional: If specified ID values present in the GFF file will be propagated into the resulting BSML file.  The default behaviour is to
\&           store identifiers produced by IdGenerator in the BSML file.
.Ve
.IP "\fB\-\-no_report_stats\fR" 8
.IX Item "--no_report_stats"
.Vb 1
\& Optional: If specified will disable the default behaviour (will not produce stats file)  The stats file will contain a count of GFF3 records by type as well as some BSML element counts
.Ve
.IP "\fB\-\-outdir,\-o\fR" 8
.IX Item "--outdir,-o"
.Vb 1
\& Optional: Directory to which .bsml file will be written.  Default is current directory
.Ve
.IP "\fB\-\-project\fR" 8
.IX Item "--project"
.Vb 1
\& Optional: project argument for IdGenerator->next_id().  Default is 'brc'.
.Ve
.IP "\fB\-\-help,\-h\fR" 8
.IX Item "--help,-h"
.Vb 1
\& Print this help
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
brcGff3ToBsml.pl \- Parse \s-1IOWG\s0 \s-1GFF\s0 file and produces \s-1BSML\s0 document
.PP
.Vb 6
\& Assumptions:
\&1. The BSML pairwise alignment encoding should validate against the XML schema:.
\&2. User has appropriate permissions (to execute script, access chado database, write to output directory).
\&3. Target chado database already contains all reference features (necessary to build feature and organism lookups) Review and execute db2bsml.pl if required.
\&4. Target chado database contains the necessary controlled vocabulary terms: "match" etc.
\&5. All software has been properly installed, all required libraries are accessible.
.Ve
.PP
Sample usage:
\&./brcGff3ToBsml.pl \-g /usr/local/annotation/OMNIUM/brc\-central/GFF_BACKUP/TIGR/bacillus_anthracis/b_anthracis_a0071_western_north_america.gff
.SH "AUTHOR"
.IX Header "AUTHOR"
Jay Sundaram
.PP
sundaram@tigr.org
