.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "INFERNAL2BSML 1"
.TH INFERNAL2BSML 1 "2015-07-29" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
infernal.pl \- Turns infernal raw output into bsml. 
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\s-1USAGE:\s0 template.pl
            \-\-input_file=/path/to/some/transterm.raw
            \-\-output=/path/to/transterm.bsml
            \-\-project=aa1
            \-\-id_repository=/some/id_repository/dir
            \-\-query_file_path=/input/file.fsa
            \-\-gzip_output=1
          [ \-\-infernal_v1
            \-\-annot_bsml_list=/path/to/annot_bsml.list
            \-\-stockholm_path=/path/to/stockholm/files
            \-\-default_type=ncRNA
            \-\-log=/path/to/file.log
            \-\-debug=4
            \-\-help
          ]
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-\-input_file,\-i\fR
    The input file (should be prosite scan output)
.PP
\&\fB\-\-output,\-o\fR
    Where the output bsml file should be
.PP
\&\fB\-\-project,\-p\fR
    [\s-1DEPRECATED\s0] The script will parse the project from the sequence id.
    Used in id generation.  It's the first token in the id.  (Ex. project.class.number.version)
.PP
\&\fB\-\-id_repository,\-r\fR
    Used to make the ids (See Ergatis::IdGenerator for details)
.PP
\&\fB\-\-query_file_path,\-g\fR
    Path to the query file (input fasta file) for infernal.
.PP
\&\fB\-\-gzip_output,\-g\fR
    A non-zero value will result in compressed bsml output.  If no .gz is on the end of the bsml output name, one will
    be added.
.PP
\&\fB\-\-infernal_v1,\-v1\fR
    Whether or not to expect infernal 1.0 or later output. If left off then the assumption is that the input is 
    pre-infernal 1.0
.PP
\&\fB\-\-annot_bsml_list,\-v1\fR
    A list file containing the existing annotation bsml. This will activate the appending of the genome tag to the output bsml.
.PP
\&\fB\-\-stockholm_path,\-sp\fR
    The path to the stockholm files that contain the alignments for the Rfam CMs. This is required if you want a good type to 
    be assigned to your hits.
.PP
\&\fB\-\-default_type,\-dt\fR
    The default \s-1SO\s0 type to be assigned to either all hits or only those hits that don't have a valid \s-1SO\s0 mapping in their 
    stockholm file (if \-\-stockholm_path is specified).
.PP
\&\fB\-\-log,\-l\fR
    In case you wanted a log file.
.PP
\&\fB\-\-debug,\-d\fR
    There are no debug statements in this program.  Sorry.
.PP
\&\fB\-\-help,\-h\fR
    Displays this message.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 1
\&    Reads in infernal output and produces a bsml representation of the matches.
.Ve
.SH "INPUT"
.IX Header "INPUT"
.Vb 1
\&    The raw output of infernal.
.Ve
.SH "OUTPUT"
.IX Header "OUTPUT"
.Vb 1
\&    Generates a BSML document representing the ps_scan matches.
.Ve
.SH "CONTACT"
.IX Header "CONTACT"
.Vb 2
\&    Kevin Galens
\&    kgalens@tigr.org
.Ve
