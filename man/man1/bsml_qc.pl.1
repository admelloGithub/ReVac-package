.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "BSML_QC 1"
.TH BSML_QC 1 "2015-07-29" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
bsml_qc.pl \- Perform a series of quality control checks (counts, etc) on BSML files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\s-1USAGE:\s0 bsml_qc.pl 
            \-\-input_list|l=<list file> or
            \-\-input_file|i=<bsml file> 
            \-\-output_dir|o=<dir> 
          [ \-\-check_dup_polypeptide=0 
            \-\-check_partial=0 
            \-\-use_pathema_asmbl_id=0 ]
            \-\-help
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-\-input_list,\-l\fR
    A list of \s-1BSML\s0 files to be checked.  Either \-\-input_list or \-\-input_file is mandatory.
.PP
\&\fB\-\-input_file,\-i\fR
    A single \s-1BSML\s0 file to be checked.  Either \-\-input_list or \-\-input_file is mandatory.
.PP
\&\fB\-\-output_dir,\-o\fR
    Output directory for summary, count and log files.
.PP
\&\fB\-\-check_dup_polypeptide\fR
    optional.  Die if a feature group has > 1 polypeptides, otherwise log and continue.
.PP
\&\fB\-\-check_partial\fR
    optional.  Die if a feature group is missing 'gene', 'transcript', '\s-1CDS\s0', 'exon', or 'polypeptide',
    otherwise log and continue.
.PP
\&\fB\-\-use_pathema_asmbl_id\fR
    optional.  Attempt to parse db and asmbl_id from filename <db>_<asmbl_id>_<other>.bsml.  Default is 1
    for backwards compatibility, but you probably want 0.
.PP
\&\fB\-\-help,\-h\fR
    This help message
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Quality Control Checks:
\&\- Checks that each assemble id is unique to a database.
\&\- Checks that Organism name and species are provided
\&\- Logs missing Cross\-reference/Attribute for Genome
\&\- Logs that each Sequence assembly has a topology, molecule_name, and molecule_type Attribute
\&\- Logs that each Feature transcript has a locus Cross-reference and gene_product_name Attribute
\&\- Logs that each Feature-group has a set of gene, transcript, \s-1CDS\s0, exon, and polypeptide Features
\&\- Confirm files referenced in Seq-data-import elements are present on filesystem and that they contain a source and identifier
\&\- Log that Genome Cross\-references, Sequence Attributes, and Feature transcript Cross-references and Attributes have names and content
\&\- Log that each Sequence has a class 
.PP
Organism Counts:
  Feature groups (valid/partial/duplicate polypeptides/total)
  Number of Features of each class
  Transcript info
  Seq-data-imports (valid/total)
  Source files
.PP
To add additional \s-1QC\s0 checks:
  1) Add a new twig_handler or modify an existing one to identify the object(s)
  2) Increment a counter in the \f(CW%onames\fR object
  3) If it's something that should cause a die situation, create a new option (with the default being
     not to die), increment a key of \f(CW%file_fails\fR, and add the check to check_errors
  4) Add zero-ing to new_oname
  5) Add output to print_counts
.SH "INPUT"
.IX Header "INPUT"
A \s-1BSML\s0 file or a list of \s-1BSML\s0 files.
.SH "OUTPUT"
.IX Header "OUTPUT"
Output directory will have
  bsml_qc.log \- lists all failed Quality Control Checks encountered on a file by file basis
  summary.out \- summary counts for each different Organism encountered in all files
  annotation_counts.txt \- the number of transcripts and polypeptides encountered for each db/asmbl_id
.SH "CONTACT"
.IX Header "CONTACT"
.Vb 2
\&    Aaron Gussman
\&    agussman@som.umaryland.edu
.Ve
