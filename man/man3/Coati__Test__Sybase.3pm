.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Coati::Test::Sybase 3"
.TH Coati::Test::Sybase 3 "2006-10-27" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Sybase.pm \- A module for providing Sybase table extraction & loading to Coati::Test.
.SH "VERSION"
.IX Header "VERSION"
This document refers to version 1.00 of Sybase.pm, released \s-1MMMM\s0, \s-1DD\s0, \s-1YYYY\s0.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use \s-1DBI\s0;
use Coati::Test::Sybase;
\&\f(CW$obj\fR = Coati::Test::Sybase\->new($self)
.PP
($self is a Coat::Test object).
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides methods to the Coati test system for operating on
Sybase databases. When a test is encountered that modifies a database
( through an insert, update or delete operation ), a way of restoring the
test database to its former state is required. Files containing the test
data are read and used to reload the database tables. Both Mysql and Sybase
have different ways and utilities of accomplishing this, hence, the two
test modules.
.Sh "Overview"
.IX Subsection "Overview"
This module is intended to provide Coati::Test, with an easy to
use api for debugging. Methods for tracing execution and outputting debugging information
based upon a \*(L"debug\*(R" level will be provided.
.IP "new($proj_obj)" 4
.IX Item "new($proj_obj)"
\&\fBDescription:\fR This is the module constructor. For this module
to work properly it needs to have the \f(CW$test\fR Coat::Test object passed in
as the object produced requires access to many of the same attributes.
.Sp
\&\fBParameters:\fR \f(CW$proj_obj\fR, a Coati::Test object.
.Sp
\&\fBReturns:\fR \f(CW$self\fR, a Coati::Test::Sybase object.
.IP "$obj\->_init($proj_obj)" 4
.IX Item "$obj->_init($proj_obj)"
\&\fBDescription:\fR A private method used to initialize the Coati::Test::Sybase
object. Initialization is accomplished by duplicating the attributes of \f(CW$proj_obj\fR
into this object so that internal methods have access to the same
data.
.Sp
\&\fBParameters:\fR \f(CW$proj_obj\fR, a Coati::Test object.
.Sp
\&\fBReturns:\fR \f(CW$self\fR, a Coati::Test::Mysql object.
.IP "$obj\->\fI_connect()\fR" 4
.IX Item "$obj->_connect()"
\&\fBDescription:\fR Connects to a Sybase server and returns a database handle.
.Sp
\&\fBParameters:\fR 
.Sp
\&\fBReturns:\fR \f(CW$dbh\fR, \s-1DBI\s0 database handle.
.IP "$obj\->_extract_table($dbmodstruct_ref)" 4
.IX Item "$obj->_extract_table($dbmodstruct_ref)"
\&\fBDescription:\fR Uses the Sybase \s-1BCP\s0 utility to dump the data
from a Sybase database table into a file in the Sybase devel
area in the project testing directory.
.Sp
\&\fBParameters:\fR \f(CW$dbmodstruct_ref\fR, a reference to a datastructure containing
information on which database, and tables to process for that
particular test. \f(CW%dbmodstruct\fR is assembled in Coati::Test::_parse_dbmod_testfile.
.Sp
\&\fBReturns:\fR None.
.IP "$obj\->_load_table($dbmodstructref)" 4
.IX Item "$obj->_load_table($dbmodstructref)"
\&\fBDescription:\fR Uses the Sybase \s-1BCP\s0 utility to load data
from a file in the project testing repository into a Sybase
database table.
.Sp
\&\fBParameters:\fR \f(CW$dbmodstruct_ref\fR, a reference to a datastructure containing
information on which database, and tables to process for that
particular test. \f(CW%dbmodstruct\fR is assembled in Coati::Test::_parse_dbmod_testfile.
.Sp
\&\fBReturns:\fR None.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
This module does not use or set any environment variables. The standard
module, File::Basename is required.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.ie n .IP """*** \s-1WARNING:\s0 \s-1BCP\s0 load failed.""" 4
.el .IP "``*** \s-1WARNING:\s0 \s-1BCP\s0 load failed.''" 4
.IX Item "*** WARNING: BCP load failed."
They Sybase utility \s-1BCP\s0 was unable to load data in a Sybase
database from a flat file. This could indicate a database
server error, or unavailability. In addition, the file containing
the data to be loaded may be in an improper format.
.SH "BUGS"
.IX Header "BUGS"
No known bugs at this time. Please report bugs and/or anomalies to the authors.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 4
\&  Coati::Logger
\&  Coati::Test
\&  Coati::Test::Mysql
\&  Data::Dumper
.Ve
.SH "AUTHOR(S)"
.IX Header "AUTHOR(S)"
.Vb 3
\& The Institute for Genomic Research
\& 9712 Medical Center Drive
\& Rockville, MD 20850
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2002, The Institute for Genomic Research. All Rights Reserved.
