[interface]
classification = assembly

[parameters]
;;Location of velvet
$;VELVET_PATH$; = $;VELVET_INSTALL_DIR$;
$;START_HASH_LENGTH$; = 19
$;END_HASH_LENGTH$; = 31
$;OTHER_OPTIMISER_OPTS$; = -a yes

[input]
;;Only accepts fasta or fastq. Make sure paired end sequences have
;;been run through shuffleSequences.pl (provided by velvet) before
;;or use prepare_paired_end_for_velvet component. For multiple inputs
;;of the same type, make a comma separated list.
$;SHORT_PAIRED$;=$;REPOSITORY_ROOT$;/output_repository/prepare_paired_ends_for_velvet/$;PIPELINEID$;_default/short_reads.list
$;LONG_PAIRED$;=$;REPOSITORY_ROOT$;/output_repository/prepare_paired_ends_for_velvet/$;PIPELINEID$;_default/long_reads.list
$;SHORT$;=
$;LONG$;=

[output]
$;OUTPUT_TOKEN$; = assembly
$;OUTPUT_DIRECTORY$; = $;REPOSITORY_ROOT$;/output_repository/$;COMPONENT_NAME$;/$;PIPELINEID$;_$;OUTPUT_TOKEN$;
;;$;SEQUENCE_OUTPUT_LIST$;=$;OUTPUT_DIRECTORY$;/$;COMPONENT_NAME$;.sequences.list
;;$;ROADMAP_OUTPUT_LIST$;=$;OUTPUT_DIRECTORY$;/$;COMPONENT_NAME$;.roadmaps.list
$;CONTIG_OUTPUT_LIST$;=$;OUTPUT_DIRECTORY$;/$;COMPONENT_NAME$;.fa.list
;;$;STATS_OUTPUT_LIST$;=$;OUTPUT_DIRECTORY$;/$;COMPONENT_NAME$;.stats.list
;;$;GRAPH_OUTPUT_LIST$;=$;OUTPUT_DIRECTORY$;/$;COMPONENT_NAME$;.graph.list
;;$;AMOS_OUTPUT_LIST$;=$;OUTPUT_DIRECTORY$;/$;COMPONENT_NAME$;.afg.list

[component]
$;COMPONENT_NAME$; = velvet_optimiser
$;DESCRIPTION$; = none
$;WORKFLOW_REPOSITORY$; = $;REPOSITORY_ROOT$;/workflow/runtime/$;COMPONENT_NAME$;/$;PIPELINEID$;_$;OUTPUT_TOKEN$;
$;PIPELINE_TOKEN$; = unnamed

;The version,revision,tag here is set by an interpolated CVS tag
$;VERSION$; = $Name$
$;RELEASE_TAG$; = $Name$
$;REVISION$; = $Revision: 5801 $

$;TEMPLATE_XML$; = $;DOCS_DIR$;/$;COMPONENT_NAME$;.xml

;Distributed options
$;NODISTRIB$; = 0

;the following keys are replaced at runtime by the invocation script
$;COMPONENT_CONFIG$; =
$;COMPONENT_XML$; =
$;PIPELINE_XML$; =
$;PIPELINEID$; =

[include]
$;PROJECT_CONFIG$;=

[dce]
$;PASSTHROUGH$; = -l mem_free=100M
