[interface]
classification = RNA-Seq

[parameters]
;; path to Python binary directory
$;PYTHON_BIN_DIR$; = $;PYTHON_BIN$;
;; path to Python library directory
$;PYTHON_LIB_DIR$; = $;PYTHON_LIB$;
;; Mode to handle reads overlapping more than one feature. [Values: union, intersection-strict or intersection-nonempty]
$;MODE$; = union
;; Feature type (3rd column in GFF file) to be used
$;TYPE$; = exon
;; Skip all reads with alignment quality lower than the given minimum value
$;MIN_QUAL$; = 0
;; Whether the data is from a strand-specific assay
$;STRANDED$; = no
;; GFF attribute ID to be used as feature ID
$;ATTRIBUTE_ID$; = gene_id
;; additonal htseq parameters
$;OTHER_PARAMS$; = 
;; use --v for verbose summary
$;OTHER_ARGS$; = --v

[input]
;; path to sorted-by-name alignment SAM file
$;INPUT_FILE$; = 
;; path to list of sorted-by-name alignment SAM files
$;INPUT_FILE_LIST$; = 
;; path to directory of multiple sorted-by-name alignment SAM files
$;INPUT_DIRECTORY$; = 
;; the following is only used when iterating over an INPUT_DIRECTORY
$;INPUT_EXTENSION$; = sam
;; path to annotation file in GFF or GTF format
$;ANNOTATION_FILE$; = 

[output]
;; use a unique sample name
$;OUTPUT_TOKEN$; = exon_counts
;; output directory for component results
$;OUTPUT_DIRECTORY$; = $;REPOSITORY_ROOT$;/output_repository/$;COMPONENT_NAME$;/$;PIPELINEID$;_$;OUTPUT_TOKEN$;
;; list of count files for each alignment SAM file sorted by name
$;OUTPUT_ALIGNMENT_COUNTS$; = $;OUTPUT_DIRECTORY$;/$;COMPONENT_NAME$;.counts.list

[component]
$;COMPONENT_NAME$; = htseq
$;DESCRIPTION$; = generates htseq alignment counts for the given SAM alignment file
$;WORKFLOW_REPOSITORY$; = $;REPOSITORY_ROOT$;/workflow/runtime/$;COMPONENT_NAME$;/$;PIPELINEID$;_$;OUTPUT_TOKEN$;
$;PIPELINE_TOKEN$; = unnamed

;;HTSeq version
$;VERSION$; = HTSeq version 0.4.7

$;TEMPLATE_XML$; = $;DOCS_DIR$;/$;COMPONENT_NAME$;.xml
$;ITERATOR1$; = i1
$;ITERATOR1_XML$; = $;DOCS_DIR$;/$;COMPONENT_NAME$;.$;ITERATOR1$;.xml

;;Distributed options
$;GROUP_COUNT$; = 150
$;NODISTRIB$; = 0

;;the following keys are replaced at runtime by the invocation script
$;COMPONENT_CONFIG$; = 
$;COMPONENT_XML$; = 
$;PIPELINE_XML$; = 
$;PIPELINEID$; = 

[include]
$;PROJECT_CONFIG$; = 
